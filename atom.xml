<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://xiaobenmao.github.io/atom.xml" rel="self"/>
  <link href="http://xiaobenmao.github.io/"/>
  <updated>2015-09-07T23:04:56+08:00</updated>
  <id>http://xiaobenmao.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[简单选择排序和冒泡排序]]></title>
    <link href="http://xiaobenmao.github.io/blog/2013/06/02/jian-dan-xuan-ze-pai-xu-he-mou-pao-pai-xu/"/>
    <updated>2013-06-02T11:16:15+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2013/06/02/jian-dan-xuan-ze-pai-xu-he-mou-pao-pai-xu</id>
    <content type="html"><![CDATA[<h4>简单冒泡排序和选择排序</h4>

<!-- more -->


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;iostream&gt;  
</span><span class='line'>using namespace std;  
</span><span class='line'>  
</span><span class='line'>void sort_Func_optimize_jiaohuan(int *a ,int  length)  
</span><span class='line'>{     
</span><span class='line'>    int now = 0 ;  
</span><span class='line'>    for (int i = 0 ; i &lt; length  -1 ; i++ )  
</span><span class='line'>    {  
</span><span class='line'>        now = i;  
</span><span class='line'>        for (int j = i + 1 ; j&lt; length ; j++)  
</span><span class='line'>        {  
</span><span class='line'>            if (a[ j ] &lt; a[ now ])  
</span><span class='line'>            {  
</span><span class='line'>                now = j;  
</span><span class='line'>            }  
</span><span class='line'>        }  
</span><span class='line'>        int temp = a[i];  
</span><span class='line'>        a[i] = a[now];  
</span><span class='line'>        a[now] = temp;  
</span><span class='line'>    }  
</span><span class='line'>}  
</span><span class='line'>  
</span><span class='line'>void sort_Func_jiaohuan(int *a ,int  length)  
</span><span class='line'>{  
</span><span class='line'>    for (int i = 0 ; i &lt; length -1 ; i++ )  
</span><span class='line'>    {  
</span><span class='line'>        for (int j = i + 1 ; j&lt; length ; j++)  
</span><span class='line'>        {  
</span><span class='line'>            if (a[ j ] &lt; a[ i ])  
</span><span class='line'>            {  
</span><span class='line'>                int temp = a[i];  
</span><span class='line'>                a[i] = a[j];  
</span><span class='line'>                a[j] = temp;  
</span><span class='line'>            }  
</span><span class='line'>        }  
</span><span class='line'>    }  
</span><span class='line'>}  
</span><span class='line'>  
</span><span class='line'>void sort_Func_bubble(int *a ,int length)  
</span><span class='line'>{  
</span><span class='line'>      
</span><span class='line'>    for (int i = 1 ; i &lt; length - 1 ; i ++ )  
</span><span class='line'>    {  
</span><span class='line'>        for (int j = 0; j &lt; length - i ; j ++)  
</span><span class='line'>        {  
</span><span class='line'>            if (a[j] &gt; a[j + 1])  
</span><span class='line'>            {  
</span><span class='line'>                int temp = a[j + 1];  
</span><span class='line'>                a[j + 1] = a[j];  
</span><span class='line'>                a[j] = temp;  
</span><span class='line'>            }  
</span><span class='line'>        }  
</span><span class='line'>    }  
</span><span class='line'>}  
</span><span class='line'>  
</span><span class='line'>void print_arry(int *a)  
</span><span class='line'>{  
</span><span class='line'>    for (int i = 0 ; i &lt;= sizeof(a) ; i ++)  
</span><span class='line'>    {  
</span><span class='line'>        cout&lt;&lt;a[i]&lt;&lt;" ";  
</span><span class='line'>    }  
</span><span class='line'>}  
</span><span class='line'>  
</span><span class='line'>void main(){  
</span><span class='line'>    int num = 0 ;  
</span><span class='line'>    int arry[5] = {0};  
</span><span class='line'>    int length = (sizeof(arry)/ sizeof(arry[0]));  
</span><span class='line'>    for(int i = 0 ; i &lt; length ; i ++)  
</span><span class='line'>    {  
</span><span class='line'>        cin &gt;&gt; arry[i];  
</span><span class='line'>    }  
</span><span class='line'>    cout &lt;&lt; "排序前："&lt;&lt;endl;  
</span><span class='line'>    print_arry(arry);  
</span><span class='line'>    sort_Func_optimize_jiaohuan(arry ,length);  
</span><span class='line'>    //sort_Func_jiaohuan(arry,length);  
</span><span class='line'>    //sort_Func_bubble(arry,length);  
</span><span class='line'>    cout &lt;&lt; endl &lt;&lt;"排序后:"&lt;&lt;endl;  
</span><span class='line'>    print_arry(arry);  
</span><span class='line'>    system("pause");  
</span><span class='line'>} 
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
