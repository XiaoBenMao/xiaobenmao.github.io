<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My World]]></title>
  <link href="http://xiaobenmao.github.io/atom.xml" rel="self"/>
  <link href="http://xiaobenmao.github.io/"/>
  <updated>2015-09-08T04:24:59+08:00</updated>
  <id>http://xiaobenmao.github.io/</id>
  <author>
    <name><![CDATA[嗷大喵]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quartz2d-画矩形]]></title>
    <link href="http://xiaobenmao.github.io/blog/2015/09/06/quartz2d-hua-ju-xing/"/>
    <updated>2015-09-06T18:05:31+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2015/09/06/quartz2d-hua-ju-xing</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-绘图中的定时器(CADisplayLink和NSTimer)]]></title>
    <link href="http://xiaobenmao.github.io/blog/2015/09/02/quartz2d-hui-tu-zhong-de-ding-shi-qi-cadisplaylinkhe-nstimer/"/>
    <updated>2015-09-02T18:32:01+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2015/09/02/quartz2d-hui-tu-zhong-de-ding-shi-qi-cadisplaylinkhe-nstimer</id>
    <content type="html"><![CDATA[<!--more-->


<p><img src="images/Quartz2d%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8.png" alt="" /></p>

<ul>
<li>NSSTimer</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> *(NSTimeInterval)ti:多少秒调用一次,单位秒</span>
</span><span class='line'><span class="cm"> *(id)aTarget:给谁添加定时器</span>
</span><span class='line'><span class="cm"> *(SEL)aSelector:回调函数,每次调用所要做的事情</span>
</span><span class='line'><span class="cm"> *(id)userInfo:此参数可以为nil，当定时器失效时，由你指定的对象保留和释放该定时器。</span>
</span><span class='line'><span class="cm"> *(BOOL)yesOrNo:是否循环</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">NSTimer</span> <span class="o">*</span><span class="p">)</span><span class="nf">scheduledTimerWithTimeInterval:</span><span class="p">(</span><span class="n">NSTimeInterval</span><span class="p">)</span><span class="nv">ti</span> <span class="nf">target:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">aTarget</span> <span class="nf">selector:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">aSelector</span> <span class="nf">userInfo:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">userInfo</span> <span class="nf">repeats:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">yesOrNo</span><span class="p">;</span>
</span><span class='line'><span class="c1">//启动 Timer</span>
</span><span class='line'><span class="err">–</span> <span class="n">fire</span>
</span><span class='line'><span class="c1">//停止 Timer</span>
</span><span class='line'><span class="err">–</span> <span class="n">invalidate</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>NSTimer初始化器接受调用方法逻辑之间的间隔作为它的其中一个参数，预设一秒执行30次。CADisplayLink默认每秒运行60次，通过它的frameInterval属性改变每秒运行帧数，如设置为2，意味CADisplayLink每隔一帧运行一次，有效的逻辑每秒运行30次。</p></li>
<li><p>NSTimer接受另一个参数是否重复，而把CADisplayLink设置为重复（默认重复？）直到它失效。</p></li>
<li><p>还有一个区别在于，NSTimer一旦初始化它就开始运行，而CADisplayLink需要将显示链接添加到一个运行循环中，即用于处理系统事件的一个Cocoa Touch结构。</p></li>
<li><p>NSTimer 我们通常会用在背景计算，更新一些数值资料，而如果牵涉到画面的更新，动画过程的演变，我们通常会用CADisplayLink。</p></li>
<li><p>但是要使用CADisplayLink，需要加入QuartzCore.framework及#import &lt;QuartzCore/CADisplayLink.h></p></li>
<li><p>CADisplayLink在Quartz2d中的使用</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;DrawView.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">CGFloat</span> <span class="n">_snowY</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">DrawView</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 如果以后想绘制东西到view上面，必须在drawRect方法里面，不管有没有手动获取到上下文</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 修改雪花y值</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span>  <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;雪花&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 画图</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="n">_snowY</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_snowY</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 当掉出屏幕底部时,修改y值,重新在顶部画出来</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_snowY</span> <span class="o">&gt;</span> <span class="n">rect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_snowY</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 如果在绘图的时候需要用到定时器，通常</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// NSTimer很少用于绘图，因为调度优先级比较低，并不会准时调用</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">awakeFromNib</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 创建定时器</span>
</span><span class='line'>    <span class="c1">//[NSTimer scheduledTimerWithTimeInterval:0.1 target:self selector:@selector(timeChange) userInfo:nil repeats:YES];</span>
</span><span class='line'>    <span class="bp">CADisplayLink</span> <span class="o">*</span><span class="n">link</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CADisplayLink</span> <span class="nl">displayLinkWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">timeChange</span><span class="p">)];</span>
</span><span class='line'>    <span class="c1">// 设定每隔几帧调用一次</span>
</span><span class='line'>    <span class="n">link</span><span class="p">.</span><span class="n">frameInterval</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 添加主运行循环</span>
</span><span class='line'>    <span class="p">[</span><span class="n">link</span> <span class="nl">addToRunLoop</span><span class="p">:[</span><span class="bp">NSRunLoop</span> <span class="n">mainRunLoop</span><span class="p">]</span> <span class="nl">forMode</span><span class="p">:</span><span class="n">NSDefaultRunLoopMode</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// CADisplayLink:每次屏幕刷新的时候就会调用，屏幕一般一秒刷新60次</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">timeChange</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 注意：这个方法并不会马上调用drawRect,其实这个方法只是给当前控件添加刷新的标记，等下一次屏幕刷新的时候才会调用drawRect</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSRunLoop-运行逻辑]]></title>
    <link href="http://xiaobenmao.github.io/blog/2015/08/01/nsrunloop-and-nsruntime/"/>
    <updated>2015-08-01T04:20:43+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2015/08/01/nsrunloop-and-nsruntime</id>
    <content type="html"><![CDATA[<ul>
<li>RunLoop相关类</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">Core</span> <span class="n">Foundation</span><span class="err">中关于</span><span class="n">RunLoop</span><span class="err">的</span><span class="mi">5</span><span class="err">个类</span>
</span><span class='line'><span class="n">CFRunLoopRef</span> <span class="c1">// 运行循环</span>
</span><span class='line'><span class="n">CFRunLoopModeRef</span> <span class="c1">// 运行模式</span>
</span><span class='line'><span class="n">CFRunLoopSourceRef</span> <span class="c1">// 事件源</span>
</span><span class='line'><span class="n">CFRunLoopTimerRef</span>   <span class="c1">// 定时器timer</span>
</span><span class='line'><span class="n">CFRunLoopObserverRef</span>    <span class="c1">// 事件监听</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/RunLoop.png" alt="" />￼</p>

<ul>
<li><p>CFRunLoopModeRef代表RunLoop的运行模式</p>

<ul>
<li>一个 RunLoop 包含若干个Mode，每个Mode又包含若干个Source/Timer/Observer</li>
<li>每次RunLoop启动时，只能指定其中一个 Mode，这个Mode被称作 CurrentMode</li>
<li>如果需要切换Mode，只能退出Loop，再重新指定一个Mode进入</li>
<li>这样做主要是为了分隔开不同组的Source/Timer/Observer，让其互不影响</li>
</ul>
</li>
<li><p>CFRunLoop的源文件是c的,开源的</p></li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/runLoop%E6%BA%90%E6%96%87%E4%BB%B6.png" alt="" />￼</p>

<p><img src="http://xiaobenmao.github.io/images/runLoop%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91.png" alt="" />￼</p>

<h3>第0步:</h3>

<ul>
<li>通过[NSRunLoop currentRunLoop]<code>懒加载</code>当前运行循环

<ul>
<li>主线程中的为<code>自动创建并运行</code>currentRunLoop或者mainRunLoop</li>
<li>子线程中的需要<code>手动创建并运行run</code>
<img src="http://xiaobenmao.github.io/images/currentRunLoop.png" alt="" />￼</li>
</ul>
</li>
</ul>


<h3>第一步:</h3>

<ul>
<li>循环开始,runLoop字面意思运行循环,跑圈,实际是<code>do...while循环</code></li>
<li>当退出标记不为NO时,一直死循环

<ul>
<li>kCFRunLoopRunStopped</li>
<li>kCFRunLoopRunFinished
<img src="http://xiaobenmao.github.io/images/%E5%BE%AA%E7%8E%AF%E5%BC%80%E5%A7%8B.png" alt="" />￼</li>
</ul>
</li>
</ul>


<h3>第二步:</h3>

<ul>
<li>RunLoop创建默认模式</li>
<li>先查找当前运行模式,在do&hellip;while主循环开始的时候传入<code>默认模式</code></li>
<li><p>可以修改运行循环的模式
<img src="http://xiaobenmao.github.io/images/%E6%9F%A5%E6%89%BE%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8Cmode.png" alt="" />￼</p></li>
<li><p>如果当前currentRunLoop不为空,</p></li>
<li>并且当前模式中,CFRUnLoopModeIsEmpty:

<ul>
<li>resources0不为空</li>
<li>resources1不为空</li>
<li>timer不为空</li>
</ul>
</li>
<li><p>则开始RunLoop运行循环入口CFRunLoopRun</p></li>
<li><p>RunLoop只能选择一个Mode启动，</p>

<ul>
<li>如果当前Mode中没有任何Source(sources0,sources1)、Timer，那么就直接退出RunLoop</li>
<li>在查找当前模式时没有判断observer,所以即使只添加了observer了,运行循环也会退出
<img src="http://xiaobenmao.github.io/images/%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E5%BE%AA%E7%8E%AFmode%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA.png" alt="" />￼
<img src="http://xiaobenmao.github.io/images/%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E5%BE%AA%E7%8E%AFmode%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA1.png" alt="" />￼</li>
</ul>
</li>
</ul>


<h3>第三步:</h3>

<ul>
<li>开始进入RunLoop循环</li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/RunLoop.png" alt="" />￼</p>

<ul>
<li>以下为c语言层次:CFRunLoopRun函数为主要代码</li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/runLoop%E5%85%A5%E5%8F%A3.png" alt="" />￼</p>

<p><img src="http://xiaobenmao.github.io/images/%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81.png" alt="" />￼</p>

<p><img src="http://xiaobenmao.github.io/images/%E7%AD%89%E5%BE%85%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E6%B6%88%E6%81%AF.png" alt="" />￼</p>

<p><img src="http://xiaobenmao.github.io/images/%E5%94%A4%E9%86%92runLoop%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86.png" alt="" />￼</p>

<h3>补充:</h3>

<ul>
<li>自动释放池什么时候释放？

<ul>
<li>通过Observer监听RunLoop的状态,一旦监听到RunLoop<code>即将进入</code>睡眠等待状态,就释放自动释放池（kCFRunLoopBeforeWaiting)</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="bp">NSRunLoop</span> <span class="n">currentRunLoop</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">打印结果:</span>
</span><span class='line'><span class="cm">&lt;CFRunLoopObserver 0x7fe62250c600 [0x104a4d180]&gt;{valid = Yes, activities = 0xa0, repeats = Yes, order = 2147483647, callout = _wrapRunLoopWithAutoreleasePoolHandler (0x104b96a43), context = &lt;CFArray 0x7fe62250c530 [0x104a4d180]&gt;{type = mutable-small, count = 0, values = ()}}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;CFRunLoopObserver 0x7fe62250c560 [0x104a4d180]&gt;{valid = Yes, activities = 0x1, repeats = Yes, order = -2147483647, callout = _wrapRunLoopWithAutoreleasePoolHandler (0x104b96a43), context = &lt;CFArray 0x7fe62250c530 [0x104a4d180]&gt;{type = mutable-small, count = 0, values = ()}}</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 以上两个_wrapRunLoopWithAutoreleasePoolHandler中activitier的地址分别为:0X1和0Xa0</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">activities = 0x1 == 1 //即将进入runLoop</span>
</span><span class='line'><span class="cm">activities = 0xa0 == 160</span>
</span><span class='line'><span class="cm">160 = kCFRunLoopBeforeWaiting(32) + kCFRunLoopExit(128)</span>
</span><span class='line'>
</span><span class='line'><span class="cm">在运行循环即将进入进入睡眠的时候释放自动释放池,并创建一个新的释放池</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> kCFRunLoopEntry = (1UL &lt;&lt; 0),  1</span>
</span><span class='line'><span class="cm"> kCFRunLoopBeforeTimers = (1UL &lt;&lt; 1), 2</span>
</span><span class='line'><span class="cm"> kCFRunLoopBeforeSources = (1UL &lt;&lt; 2), 4</span>
</span><span class='line'><span class="cm"> kCFRunLoopBeforeWaiting = (1UL &lt;&lt; 5), 32</span>
</span><span class='line'><span class="cm"> kCFRunLoopAfterWaiting = (1UL &lt;&lt; 6), 64</span>
</span><span class='line'><span class="cm"> kCFRunLoopExit = (1UL &lt;&lt; 7), 128</span>
</span><span class='line'>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">*/</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在子线程开启RunLoop的时候最好放在一个大的自动释放池中</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 子线程回调函数</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">execute</span><span class="p">{</span>
</span><span class='line'>    <span class="k">@autoreleasepool</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 开启runLoop代码</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/runLoop%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91%E5%AE%98%E6%96%B9%E5%9B%BE%E7%89%87.png" alt="" />￼
<img src="http://xiaobenmao.github.io/images/runLoop%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91%E5%AE%98%E6%96%B9%E8%A7%A3%E9%87%8A.png" alt="" />￼</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoreAnimation-粒子效果]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/06/coreanimation-li-zi-xiao-guo/"/>
    <updated>2014-08-06T09:15:04+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/06/coreanimation-li-zi-xiao-guo</id>
    <content type="html"><![CDATA[<h4>粒子动画</h4>

<p>效果：随机绘制一条路径，点击开始按钮，粒子动画</p>

<h4>实现思路</h4>

<ul>
<li><p>1.搞个画板绘制路径，自定义view</p></li>
<li><p>2.给自定义view添加pan手势，和创建复制图层和圆形图层，只需要设置一次，在awakeFromNib方法中设置。</p></li>
</ul>


<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="c1">// 添加pan手势</span>
</span><span class='line'>    <span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="n">pan</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIPanGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">pan</span><span class="p">:)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">pan</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建复制图层</span>
</span><span class='line'>    <span class="bp">CAReplicatorLayer</span> <span class="o">*</span><span class="n">repLayer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAReplicatorLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">repLayer</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">repLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建粒子图层</span>
</span><span class='line'>    <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">repLayer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_dotLayer</span> <span class="o">=</span> <span class="n">layer</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>3.因为核心动画只能设置一个路径，因此只能创建一个路径，懒加载路径。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIBezierPath</span> <span class="o">*</span><span class="p">)</span><span class="nf">path</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_path</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_path</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>4.在一开始拖动的时候，保存路径起点，设置路径起点，拖动的时候每次添加线到某个点。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="bp">CGPoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateBegan</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_startP</span> <span class="o">=</span> <span class="n">curP</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">_startP</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">curP</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>5.路径绘制好了，点击开始按钮的时候，添加动画到图层</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CAKeyframeAnimation</span> <span class="o">*</span><span class="n">anim</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAKeyframeAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="n">MAXFLOAT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_dotLayer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">anim</span> <span class="nl">forKey</span><span class="p">:</span><span class="s">@&quot;anim&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>6.复制图层</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">repLayer</span><span class="p">.</span><span class="n">instanceCount</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'><span class="n">repLayer</span><span class="p">.</span><span class="n">instanceDelay</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">/</span> <span class="mf">20.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置子层颜色</span>
</span><span class='line'><span class="n">repLayer</span><span class="p">.</span><span class="n">instanceColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="nl">colorWithRed</span><span class="p">:</span><span class="mi">0</span> <span class="nl">green</span><span class="p">:</span><span class="mi">1</span> <span class="nl">blue</span><span class="p">:</span><span class="mi">0</span> <span class="nl">alpha</span><span class="p">:</span><span class="mi">1</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置子层颜色绿色通道偏移量</span>
</span><span class='line'><span class="n">repLayer</span><span class="p">.</span><span class="n">instanceGreenOffset</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.03</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>7.重绘
清空路径，重新绘制，移除图层动画。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">_path</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">_dotLayer</span> <span class="nl">removeAnimationForKey</span><span class="p">:</span><span class="s">@&quot;anim&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E7%B2%92%E5%AD%90%E6%95%88%E6%9E%9C.png" alt="" /></p>

<ul>
<li>完整代码如下</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">DrawView</span> : <span class="bp">UIView</span>
</span><span class='line'><span class="c1">// 开始动画</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">reDraw</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 重绘</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startA</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;DrawView.h&quot;</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">DrawView</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**路径*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**复制层*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">CAReplicatorLayer</span> <span class="o">*</span><span class="n">replicatorL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**原始层*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">CALayer</span> <span class="o">*</span><span class="n">dotLayer</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">DrawView</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">awakeFromNib</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 添加手势</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">addPanGR</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#pragma mark - 懒加载</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 此处只需要添加一条路径,原始层添加的帧动画路径只有一个,所以复制出来的层都会由相同的动画路径,</span>
</span><span class='line'><span class="c1">// 只是前后间隔延迟,每一个点是一个子层,重叠起来的</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIBezierPath</span> <span class="o">*</span><span class="p">)</span><span class="nf">path</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_path</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_path</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">CAReplicatorLayer</span> <span class="o">*</span><span class="p">)</span><span class="nf">replicatorL</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_replicatorL</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="n">_replicatorL</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAReplicatorLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_replicatorL</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_replicatorL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">CALayer</span> <span class="o">*</span><span class="p">)</span><span class="nf">dotLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_dotLayer</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_dotLayer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_dotLayer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="o">-</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_dotLayer</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_dotLayer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_dotLayer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blueColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_dotLayer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#pragma mark - 添加手势</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addPanGR</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="n">pan</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIPanGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">pan</span><span class="p">:)];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">pan</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="n">_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取当前点</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 画线</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateBegan</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">curP</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 手指不断移动,当前点连线到上一点,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">curP</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 重绘画出当前路径</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 用来记录触摸点滑动中个数,设置复制层中复制的个数,防止,路径太长,动画太少</span>
</span><span class='line'>    <span class="n">_count</span> <span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addReplicatorLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 懒加载添加复制层</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">replicatorL</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 懒加载添加原始层</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">replicatorL</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">dotLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加动画</span>
</span><span class='line'>    <span class="bp">CAKeyframeAnimation</span> <span class="o">*</span><span class="n">keyframe</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAKeyframeAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">keyframe</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">keyframe</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">_path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">keyframe</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="n">MAXFLOAT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">duration</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">keyframe</span><span class="p">.</span><span class="n">duration</span>  <span class="o">=</span> <span class="n">duration</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_dotLayer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">keyframe</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置复制层属性,必须先添加动画再复制</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="n">_count</span> <span class="o">/</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_replicatorL</span><span class="p">.</span><span class="n">instanceCount</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//NSLog(@&quot;%zd&quot;,_replicatorL.instanceCount);</span>
</span><span class='line'>    <span class="n">_replicatorL</span><span class="p">.</span><span class="n">instanceDelay</span> <span class="o">=</span> <span class="n">duration</span> <span class="o">/</span> <span class="n">num</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - 开始动画和重绘</span>
</span><span class='line'><span class="c1">// 开始动画</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startA</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">addReplicatorLayer</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 重画</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">reDraw</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 清空绘图信息</span>
</span><span class='line'>    <span class="n">_path</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 把原始层移除父控件,复制出来的层也会移除</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_dotLayer</span> <span class="n">removeFromSuperlayer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">_dotLayer</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 清空数量</span>
</span><span class='line'>    <span class="n">_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 重绘</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="bp">UIViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;DrawView.h&quot;</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 点击重绘</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">reDraw:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">DrawView</span> <span class="o">*</span><span class="n">drView</span> <span class="o">=</span> <span class="p">(</span><span class="n">DrawView</span> <span class="o">*</span><span class="p">)</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">drView</span> <span class="n">reDraw</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 点击开始</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">startA:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">DrawView</span> <span class="o">*</span><span class="n">drView</span> <span class="o">=</span> <span class="p">(</span><span class="n">DrawView</span> <span class="o">*</span><span class="p">)</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">drView</span> <span class="n">startA</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E7%B2%92%E5%AD%90%E6%95%88%E6%9E%9Cstoryboard.png" alt="" /></p>

<ul>
<li>将控制器的view作为画板,自定义继承于view的类,给控制器修改class为自定义类</li>
<li><code>核心动画只能设置一个路径</code>,所以懒加载一个路径,</li>
<li>一条路径可以不连贯,设置多个起点,分成多段</li>
<li>在重绘的时候,可以通过设置动画的代理时的key值,将原始层的动画删除</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">_dotLayer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">keyframe</span> <span class="nl">forKey</span><span class="p">:</span><span class="s">@&quot;an&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">keyframe</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 重绘的时候</span>
</span><span class='line'><span class="c1">// 原始层没有动画,复制的子层也没有动画</span>
</span><span class='line'><span class="p">[</span><span class="n">_dotLayer</span> <span class="nl">removeAnimationForKey</span><span class="p">:</span><span class="s">@&quot;an&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>也可以将原始层删除,用到时重新加载</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoreAnimation-折叠图片]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/05/coreanimation-zhe-die-tu-pian-contentsrect/"/>
    <updated>2014-08-05T08:33:06+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/05/coreanimation-zhe-die-tu-pian-contentsrect</id>
    <content type="html"><![CDATA[<h4>图片折叠效果</h4>

<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E5%89%8D.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E5%90%8E.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87-%E6%8E%92%E5%88%97%E5%9B%BE%E7%89%87.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="c1">//@property (weak, nonatomic) IBOutlet UIImageView *test1View;</span>
</span><span class='line'><span class="c1">//@property (weak, nonatomic) IBOutlet UIImageView *testView;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">topView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">bottomView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIView</span> <span class="o">*</span><span class="n">dragView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">CAGradientLayer</span> <span class="o">*</span><span class="n">gradientL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> 两张图片的顺序,不能错,否则,旋转过九十度后就会看不到</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 阴影:渐变层的渐变色colors属性必须有颜色</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> *一张图片必须要通过两个控件展示，旋转的时候，只旋转上部分控件</span>
</span><span class='line'><span class="cm"> *如何让一张完整的图片通过两个控件显示?</span>
</span><span class='line'><span class="cm"> *  1&gt;通过layer的contentsRect属性控制图片的显示内容</span>
</span><span class='line'><span class="cm"> *  2&gt;如果快速把两个控件拼接成一个完整图片</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//    // 通过上下接壤排列</span>
</span><span class='line'><span class="c1">//    self.testView.layer.contentsRect = CGRectMake(0, 0, 1, 0.5);</span>
</span><span class='line'><span class="c1">//    self.test1View.layer.contentsRect = CGRectMake(0, 0.5, 1, 0.5);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 快速排列</span>
</span><span class='line'>    <span class="c1">// 通过设置contentsRect可以设置图片显示的尺寸，取值0~1</span>
</span><span class='line'>    <span class="n">_topView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">contentsRect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">_topView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">anchorPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_bottomView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">contentsRect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>    <span class="n">_bottomView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">anchorPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加手势</span>
</span><span class='line'>    <span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="n">pan</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIPanGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">pan</span><span class="p">:)];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_dragView</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">pan</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渐变图层</span>
</span><span class='line'>    <span class="bp">CAGradientLayer</span> <span class="o">*</span><span class="n">gradientL</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAGradientLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 注意图层需要设置尺寸</span>
</span><span class='line'>    <span class="n">gradientL</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">_bottomView</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">gradientL</span><span class="p">.</span><span class="n">opacity</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 设置渐变色,从无色到黑色,需要类型转换</span>
</span><span class='line'>    <span class="c1">// 渐变层的渐变色排列在所添加的层上,这里开始的时候不需要显示,当旋转的时候慢慢出现,所以通过透明度来修改</span>
</span><span class='line'>    <span class="n">gradientL</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="l">@[</span><span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">clearColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,(</span><span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_gradientL</span> <span class="o">=</span> <span class="n">gradientL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_bottomView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">gradientL</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 拖动的时候旋转上部分内容，200 M_PI</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取偏移量</span>
</span><span class='line'>   <span class="bp">CGPoint</span> <span class="n">transP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">translationInView</span><span class="p">:</span><span class="n">_dragView</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 旋转角度,往下逆时针旋转,可向下滑动区域为dragView的高度,当y偏移200时,旋转M_Pi</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">angle</span> <span class="o">=</span> <span class="o">-</span><span class="n">transP</span><span class="p">.</span><span class="n">y</span> <span class="o">/</span> <span class="mf">200.0</span> <span class="o">*</span> <span class="n">M_PI</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CATransform3D</span> <span class="n">transfrom</span> <span class="o">=</span> <span class="n">CATransform3DIdentity</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// m34增加旋转的立体感，近大远小,d：距离图层的距离</span>
</span><span class='line'>    <span class="n">transfrom</span><span class="p">.</span><span class="n">m34</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">/</span> <span class="mf">500.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">transfrom</span> <span class="o">=</span> <span class="n">CATransform3DRotate</span><span class="p">(</span><span class="n">transfrom</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_topView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">transfrom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置阴影效果</span>
</span><span class='line'>    <span class="n">_gradientL</span><span class="p">.</span><span class="n">opacity</span> <span class="o">=</span> <span class="n">transP</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="mi">1</span> <span class="o">/</span> <span class="mf">200.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateEnded</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 反弹</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 弹簧效果的动画</span>
</span><span class='line'>        <span class="c1">// SpringWithDamping:弹性系数,越小，弹簧效果越明显</span>
</span><span class='line'>        <span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">0.6</span> <span class="nl">delay</span><span class="p">:</span><span class="mi">0</span> <span class="nl">usingSpringWithDamping</span><span class="p">:</span><span class="mf">0.2</span> <span class="nl">initialSpringVelocity</span><span class="p">:</span><span class="mi">10</span> <span class="nl">options</span><span class="p">:</span><span class="n">UIViewAnimationOptionCurveEaseInOut</span> <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">_topView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DIdentity</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span> <span class="nl">completion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">finished</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87storyboard.png" alt="" /></p>

<h3>渐变层</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 设置渐变颜色,渐变层会显示从红,绿,黄,三色排布</span>
</span><span class='line'><span class="n">gradientL</span><span class="p">.</span><span class="n">colors</span> <span class="o">=</span> <span class="l">@[</span><span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,(</span><span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">,(</span><span class="kt">id</span><span class="p">)[</span><span class="bp">UIColor</span> <span class="n">yellowColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置渐变定位点</span>
</span><span class='line'><span class="c1">//gradientL.locations = @[@0.1,@0.4,@0.5];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置渐变开始点，取值0~1</span>
</span><span class='line'><span class="n">gradientL</span><span class="p">.</span><span class="n">startPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">_bottomView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">gradientL</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E6%B8%90%E5%8F%98%E5%B1%821.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E6%B8%90%E5%8F%98%E5%B1%822.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E6%B8%90%E5%8F%98%E5%B1%823.png" alt="" /></p>

<ul>
<li>注意点:

<ul>
<li>`在storyboard排列imageView时,注意前后顺序,否则会在选装超过90°时被挡住</li>
<li>必须设置渐变层的渐变色,然后通过透明度控制显示和隐藏</li>
<li>在设置M34增加立体感时,

<ul>
<li>要创建一个空的CATransform3D</li>
<li>然后添加M34(可通过参数设置很小,验证有没有效果,向外为负数)</li>
<li>如果有旋转,则将transform作为上一次的旋转参数,赋值给要旋转的layer</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CATransform3D</span> <span class="n">transfrom</span> <span class="o">=</span> <span class="n">CATransform3DIdentity</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// m34增加旋转的立体感，近大远小,d：距离图层的距离</span>
</span><span class='line'><span class="n">transfrom</span><span class="p">.</span><span class="n">m34</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">/</span> <span class="mf">10.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">transfrom</span> <span class="o">=</span> <span class="n">CATransform3DRotate</span><span class="p">(</span><span class="n">transfrom</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">_topView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">transfrom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置阴影效果</span>
</span><span class='line'><span class="n">_gradientL</span><span class="p">.</span><span class="n">opacity</span> <span class="o">=</span> <span class="n">transP</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="mi">1</span> <span class="o">/</span> <span class="mf">200.0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%8A%98%E5%8F%A0%E5%9B%BE%E7%89%87%E7%AB%8B%E4%BD%93%E6%95%88%E6%9E%9C.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoreAnimation-CABasicAnimation和CAKeyframeAnimation和CAGroupAnimation]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/04/coreanimation-cabasicanimationhe-cakeyframeanimationhe-cagroupanimation/"/>
    <updated>2014-08-04T15:31:00+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/04/coreanimation-cabasicanimationhe-cakeyframeanimationhe-cagroupanimation</id>
    <content type="html"><![CDATA[<h3>CABasicAnimation</h3>

<!--more-->


<p><img src="http://xiaobenmao.github.io/images/CABasicAnimation.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesBegan:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 创建动画</span>
</span><span class='line'>    <span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">anim</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 描述下修改哪个属性产生动画</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 只能是layer属性</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;transform.scale&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="mf">@0.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 要想动画执行完成后保持最后状态,以下两个条件缺一不可</span>
</span><span class='line'>    <span class="c1">// 设置动画完成的时候不要移除动画</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置动画执行完成要保持动画最后的状态</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置动画执行次数</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="n">MAXFLOAT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// imageView上的图片是心形,将动画加在imageView的层上</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_imageV</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">anim</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>如果保持最后状态:

<ul>
<li>当改变imagView的大小后,保持在最后的状态</li>
<li>然后重复进行,</li>
</ul>
</li>
<li>如果不添加保持最后状态的代码

<ul>
<li>当改变imageView的大小后,先恢复到原始状态</li>
<li>然后重复进行</li>
</ul>
</li>
</ul>


<h3>CAKeyframeAnimation</h3>

<p><img src="http://xiaobenmao.github.io/images/CAKeyframeAnimation.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>   <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * 创建CALayer</span>
</span><span class='line'><span class="cm">    * touchBegin,点击屏幕，做动画</span>
</span><span class='line'><span class="cm">    * 创建动画，添加动画到CALayer</span>
</span><span class='line'><span class="cm">    * 怎样执行动画？执行动画的本质是改变图层的属性。</span>
</span><span class='line'><span class="cm">    * 告诉动画执行怎样的动画?设置动画属性(position)</span>
</span><span class='line'><span class="cm">    * 告诉动画属性怎么改变?设置动画属性值改变 toValue fromValue</span>
</span><span class='line'><span class="cm">    * duration:动画时长</span>
</span><span class='line'><span class="cm">    * 动画有反弹?取消反弹</span>
</span><span class='line'><span class="cm">        1&gt; 执行动画完毕不要移除</span>
</span><span class='line'><span class="cm">        2&gt; 设置动画填充模式，保持最新的位置。</span>
</span><span class='line'><span class="cm">    * rotation:</span>
</span><span class='line'><span class="cm">    三维旋转：transform</span>
</span><span class='line'><span class="cm">    二维旋转：transform.rotation</span>
</span><span class='line'><span class="cm">    * scale</span>
</span><span class='line'><span class="cm">    * 设置图层内容（心）</span>
</span><span class='line'><span class="cm">    * tovalue:@0.5</span>
</span><span class='line'><span class="cm">    * 总结CABasicAnimation只能在两个值之间做动画，怎么多个值做动画，用CAKeyframeAnimation</span>
</span><span class='line'><span class="cm">    */</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;DrawView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">DrawView</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">DrawView</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesBegan:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// touch</span>
</span><span class='line'>    <span class="bp">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">[</span><span class="n">touches</span> <span class="n">anyObject</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取手指的触摸点</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建路径</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>    <span class="n">_path</span> <span class="o">=</span> <span class="n">path</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置起点</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">curP</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesMoved:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// touch</span>
</span><span class='line'>    <span class="bp">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">[</span><span class="n">touches</span> <span class="n">anyObject</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取手指的触摸点</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 不设置起点,默认起点是上一位置的终点</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">curP</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 进行重绘</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesEnded:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 给imageView添加核心动画</span>
</span><span class='line'>    <span class="c1">// 添加核心动画</span>
</span><span class='line'>    <span class="bp">CAKeyframeAnimation</span> <span class="o">*</span><span class="n">anim</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAKeyframeAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 路径转换,从UI转为CG</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">_path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 动画的时间</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 执行最大次数,也就是重复执行</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="n">MAXFLOAT</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 取到imageView添加动画</span>
</span><span class='line'>    <span class="p">[[[</span><span class="nb">self</span><span class="p">.</span><span class="n">subviews</span> <span class="n">firstObject</span><span class="p">]</span> <span class="n">layer</span><span class="p">]</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">anim</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 绘制路径</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/CAKeyframeAnimation%E7%9A%84path.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/CAKeyframeAnimation%E7%9A%84storyboard.png" alt="" /></p>

<h4>图标抖动</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//    anim.values = @[@(angle2Radion(-10)),@(angle2Radion(10)),@(angle2Radion(-10))];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/CAAnimationGroup.png" alt="" /></p>

<h3>CAGroupAnimation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesBegan:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 同时缩放，平移，旋转</span>
</span><span class='line'>    <span class="bp">CAAnimationGroup</span> <span class="o">*</span><span class="n">group</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAAnimationGroup</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">scale</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>    <span class="n">scale</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;transform.scale&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scale</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="mf">@0.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">rotation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>    <span class="n">rotation</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;transform.rotation&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rotation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="l">@(</span><span class="n">arc4random_uniform</span><span class="p">(</span><span class="n">M_PI</span><span class="p">)</span><span class="l">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">position</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'>    <span class="n">position</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">position</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">200</span><span class="p">),</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">200</span><span class="p">))];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">group</span><span class="p">.</span><span class="n">animations</span> <span class="o">=</span> <span class="l">@[</span><span class="n">scale</span><span class="p">,</span><span class="n">rotation</span><span class="p">,</span><span class="n">position</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_redView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">group</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CALayer-时钟]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/02/calayer-shi-zhong/"/>
    <updated>2014-08-02T18:29:04+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/02/calayer-shi-zhong</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">时钟-自定义图层</span>
</span><span class='line'><span class="cm">程序思路：</span>
</span><span class='line'><span class="cm">* 了解时钟由什么组成的，使用哪些控件。(UIImgeView,CALayer)</span>
</span><span class='line'><span class="cm">* 为什么不使用UIView，而使用CALayer,需要监听事件吗？</span>
</span><span class='line'><span class="cm">* 现实生活中秒针是怎么旋转的，绕着时钟的中点转，PPT演示，拖一根秒针线条</span>
</span><span class='line'><span class="cm">* 在ios中默认是绕着中心点旋转的，因为锚点默认在图层的中点，要想绕着下边中心点转，需要改变图层锚点的位置。</span>
</span><span class='line'><span class="cm">* 根据锚点，设置position坐标，为时钟的中点。</span>
</span><span class='line'><span class="cm">* 思考秒针旋转的角度，怎么知道当前秒针旋转到哪，当前秒针旋转的角度 = 当前秒数 * 每秒转多少°。</span>
</span><span class='line'><span class="cm">1&gt; 计算一秒转多少° 360 * 60 = 6</span>
</span><span class='line'><span class="cm">2&gt; 获取当前秒数，通过日历对象，获取日期组成成分 NSCalendar -&gt; NSDateComponents -&gt; 获取当前秒数</span>
</span><span class='line'><span class="cm">* 每隔一秒，获取最新秒数，更新时钟。</span>
</span><span class='line'><span class="cm">* 分钟一样的做法</span>
</span><span class='line'><span class="cm">* 时钟也一样</span>
</span><span class='line'><span class="cm">    1.每一分钟，时钟也需要旋转，60分钟 -&gt; 1小时 - &gt; 30°  ==》 每分钟 30 / 60.0  一分钟时针转0.5°</span>
</span><span class='line'><span class="cm">* 把时针和秒针头尾变尖，设置圆角半径</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E6%97%B6%E9%92%9F.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="c1">// 时钟背景的宽度</span>
</span><span class='line'><span class="cp">#define kClockW _clockView.bounds.size.width</span>
</span><span class='line'><span class="c1">// 将角度转为弧度</span>
</span><span class='line'><span class="cp">#define angle2radian(angle) ((angle) / 180.0 * M_PI)</span>
</span><span class='line'><span class="c1">// 一秒钟秒针转6°</span>
</span><span class='line'><span class="cp">#define perSecondA 6</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 一分钟分针转6°</span>
</span><span class='line'><span class="cp">#define perMinuteA 6</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 一小时时针转30°</span>
</span><span class='line'><span class="cp">#define perHourA 30</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 每分钟时针转多少度</span>
</span><span class='line'><span class="cp">#define perMinuteHourA 0.5</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">clockView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">CALayer</span> <span class="o">*</span><span class="n">secondLayer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">CALayer</span> <span class="o">*</span><span class="n">minuteLayer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">CALayer</span> <span class="o">*</span><span class="n">hourLayer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加时针</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setUpHourLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加分针</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setUpMinuteLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加秒针</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setUpSecondLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加定时器</span>
</span><span class='line'>    <span class="p">[</span><span class="bp">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval</span><span class="p">:</span><span class="mi">1</span> <span class="nl">target</span><span class="p">:</span><span class="nb">self</span> <span class="nl">selector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">timeChange</span><span class="p">)</span> <span class="nl">userInfo</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">repeats</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 开始就获取时间,否则会从初始添加状态,跳到当前时间</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">timeChange</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">timeChange</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取当前的系统的时间</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取当前日历对象</span>
</span><span class='line'>    <span class="bp">NSCalendar</span> <span class="o">*</span><span class="n">calendar</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSCalendar</span> <span class="n">currentCalendar</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取日期的组件：年月日小时分秒</span>
</span><span class='line'>    <span class="c1">// components:需要获取的日期组件</span>
</span><span class='line'>    <span class="c1">// fromDate：获取哪个日期的组件</span>
</span><span class='line'>    <span class="c1">// 经验：以后枚举中有移位运算符，通常一般可以使用并运算（|）</span>
</span><span class='line'>    <span class="bp">NSDateComponents</span>  <span class="o">*</span><span class="n">cmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">calendar</span> <span class="nl">components</span><span class="p">:</span><span class="n">NSCalendarUnitSecond</span> <span class="o">|</span> <span class="n">NSCalendarUnitMinute</span> <span class="o">|</span> <span class="n">NSCalendarUnitHour</span> <span class="nl">fromDate</span><span class="p">:[</span><span class="bp">NSDate</span> <span class="n">date</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取秒</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">second</span> <span class="o">=</span> <span class="n">cmp</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取分</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">minute</span> <span class="o">=</span> <span class="n">cmp</span><span class="p">.</span><span class="n">minute</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取小时</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">hour</span> <span class="o">=</span> <span class="n">cmp</span><span class="p">.</span><span class="n">hour</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 计算秒针转多少度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">secondA</span> <span class="o">=</span> <span class="n">second</span> <span class="o">*</span> <span class="n">perSecondA</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 计算分针转多少度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">minuteA</span> <span class="o">=</span> <span class="n">minute</span> <span class="o">*</span> <span class="n">perMinuteA</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 计算时针转多少度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">hourA</span> <span class="o">=</span> <span class="n">hour</span> <span class="o">*</span> <span class="n">perHourA</span> <span class="o">+</span> <span class="n">minute</span> <span class="o">*</span> <span class="n">perMinuteHourA</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 旋转秒针</span>
</span><span class='line'>    <span class="n">_secondLayer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeRotation</span><span class="p">(</span><span class="n">angle2radian</span><span class="p">(</span><span class="n">secondA</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 旋转分针</span>
</span><span class='line'>    <span class="n">_minuteLayer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeRotation</span><span class="p">(</span><span class="n">angle2radian</span><span class="p">(</span><span class="n">minuteA</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 旋转小时</span>
</span><span class='line'>    <span class="n">_hourLayer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeRotation</span><span class="p">(</span><span class="n">angle2radian</span><span class="p">(</span><span class="n">hourA</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#pragma mark - 添加秒针</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setUpSecondLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="bp">CALayer</span> <span class="o">*</span><span class="n">secondL</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">secondL</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置锚点</span>
</span><span class='line'>    <span class="n">secondL</span><span class="p">.</span><span class="n">anchorPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">secondL</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">secondL</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span> <span class="o">-</span> <span class="mi">20</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_clockView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">secondL</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_secondLayer</span> <span class="o">=</span> <span class="n">secondL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - 添加分针</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setUpMinuteLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置锚点</span>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">anchorPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span> <span class="o">-</span> <span class="mi">20</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_clockView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_minuteLayer</span> <span class="o">=</span> <span class="n">layer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - 添加时针</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setUpHourLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置锚点</span>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">anchorPoint</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">kClockW</span> <span class="o">*</span> <span class="mf">0.5</span> <span class="o">-</span> <span class="mi">40</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_clockView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_hourLayer</span> <span class="o">=</span> <span class="n">layer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%97%B6%E9%92%9Fstoryboard.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CALayer-隐式动画]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/02/calayer-yin-shi-dong-hua/"/>
    <updated>2014-08-02T13:28:56+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/02/calayer-yin-shi-dong-hua</id>
    <content type="html"><![CDATA[<p><img src="http://xiaobenmao.github.io/images/%E9%9A%90%E5%BC%8F%E5%8A%A8%E7%94%BB0.png" alt="" /></p>

<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E9%9A%90%E5%BC%8F%E5%8A%A8%E7%94%BB1.png" alt="" /></p>

<ul>
<li>对于手动创建的layer,即非控件的layer在一些属性修改    时会有默认的动画效果</li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/%E9%9A%90%E5%BC%8F%E5%8A%A8%E7%94%BB%E6%8F%90%E7%A4%BA.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="c1">// 角度转弧度</span>
</span><span class='line'><span class="cp">#define angle2radion(angle) ((angle) / 180.0 * M_PI)</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIView</span> <span class="o">*</span><span class="n">blueView</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">150</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">80</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_layer</span> <span class="o">=</span> <span class="n">layer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesBegan:</span><span class="p">(</span><span class="bp">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="bp">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 举例隐式动画属性:(有渐变的过程,不突兀)</span>
</span><span class='line'>    <span class="c1">// 直接修改rootLayer的属性值,变化很快,没有动画效果</span>
</span><span class='line'>    <span class="c1">// 随机旋转</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeRotation</span><span class="p">(</span><span class="n">angle2radion</span><span class="p">(</span><span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">360</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 随机设置位置</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="o">+</span> <span class="mi">20</span><span class="p">,</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span> <span class="o">+</span> <span class="mi">50</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 圆角半径随机</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 背景颜色随机</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">randomColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 随机边框宽度</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 随机边框颜色</span>
</span><span class='line'>    <span class="n">_layer</span><span class="p">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">randomColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 返回随机的颜色</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nf">randomColor</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">r</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">b</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">g</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="nl">colorWithRed</span><span class="p">:</span><span class="n">r</span> <span class="nl">green</span><span class="p">:</span><span class="n">g</span> <span class="nl">blue</span><span class="p">:</span><span class="n">b</span> <span class="nl">alpha</span><span class="p">:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E9%9A%90%E5%BC%8F%E5%8A%A8%E7%94%BB%E9%9A%8F%E6%9C%BA.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CALayer-属性设置]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/08/01/calayer-shu-xing-she-zhi/"/>
    <updated>2014-08-01T15:28:44+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/08/01/calayer-shu-xing-she-zhi</id>
    <content type="html"><![CDATA[<p><img src="http://xiaobenmao.github.io/images/CALayer%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.png" alt="" /></p>

<!--more-->


<p><img src="http://xiaobenmao.github.io/images/CALayer.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/CALyer%E7%9A%84%E5%B1%9E%E6%80%A71.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/CALyer%E7%9A%84%E5%B1%9E%E6%80%A72.png" alt="" /></p>

<h4>通过CCLAyer可以调整View的一些外观属性</h4>

<p><img src="http://xiaobenmao.github.io/images/CALayer%E5%AF%B9view%E7%9A%84%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 可以通过CALyer,调整view的一些外观属性</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 圆角半径</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 边框</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 边框颜色</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">grayColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置阴影</span>
</span><span class='line'>    <span class="c1">//Opacity:不透明度,alpha:透明度</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowOpacity</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 注意：图层的颜色都是核心绘图框架，通常用.CGColor将UI类型转为CG类型</span>
</span><span class='line'>    <span class="c1">// 阴影颜色</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 阴影偏移量</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowOffset</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 阴影的半径</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowRadius</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>UIImageView在CALayer中的使用</h4>

<p><img src="http://xiaobenmao.github.io/images/CALyer%E5%89%AA%E8%A3%81%E5%A4%B4%E5%83%8F.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// cornerRadiu设置控件的主层边框(rootLayer)</span>
</span><span class='line'>    <span class="c1">// 图片是加在主层的子控件contents内容层中</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span><span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">contents</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 超出主层边框的内容全部裁剪掉</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">masksToBounds</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置边框</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     *通过剪裁和上述方法都能获取原型头像</span>
</span><span class='line'><span class="cm">     *如何判断以后是否需要裁剪图片，就判断下需要显示图层的控件是否是正方形。</span>
</span><span class='line'><span class="cm">     *如果控件的宽高不相等,则使用CALyer会变形</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/CALayer%E5%89%AA%E8%A3%81%E5%A4%B4%E5%83%8F1.png" alt="" /></p>

<h4>CALayer的形变属性</h4>

<p><img src="http://xiaobenmao.github.io/images/xyz%E8%BD%B4.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>        <span class="c1">// 旋转,不使用动画,会旋转过快,看不出效果</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeRotation</span><span class="p">(</span><span class="n">M_PI</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 缩放</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeScale</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 平移</span>
</span><span class='line'>         <span class="nb">self</span><span class="p">.</span><span class="n">greenView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CATransform3DMakeTranslation</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 快速进行图层缩放,KVC</span>
</span><span class='line'>        <span class="c1">// [self.greenView.layer setValue:@0.5 forKeyPath:@&quot;transform.scale&quot;];</span>
</span><span class='line'>        <span class="c1">// [self.greenView.layer setValue:@(M_PI) forKeyPath:@&quot;transform.rotation&quot;];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/CALayer%E4%B8%AD%E7%9A%84storyboard.png" alt="" /></p>

<h4>创建CALayer</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 创建CALayer</span>
</span><span class='line'>    <span class="bp">CALayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">].</span><span class="bp">CGColor</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 图片设置在属性内容contents里;</span>
</span><span class='line'>    <span class="c1">// 前面有中文,后面的.CGImage不提示, 要进行类型转换</span>
</span><span class='line'>    <span class="n">layer</span><span class="p">.</span><span class="n">contents</span> <span class="o">=</span> <span class="p">(</span><span class="kt">id</span><span class="p">)([</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">].</span><span class="bp">CGImage</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 添加层</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer</span><span class="p">:</span><span class="n">layer</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>CGColor和CGImage需要在UIKit框架和CoreGraphic之间转换</code>
<img src="http://xiaobenmao.github.io/images/CGColor%E5%92%8CCGImage.png" alt="" /></p></li>
<li><p><code>UIView和CALayer最大区别是是否能处理点击事件</code>
<img src="http://xiaobenmao.github.io/images/UIView%E5%92%8CCALayer%E7%9A%84%E9%80%89%E6%8B%A9.png" alt="" /></p></li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/UIView%E5%92%8CCALayer.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-画板]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/17/quartz2d-hua-ban/"/>
    <updated>2014-07-17T18:39:13+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/17/quartz2d-hua-ban</id>
    <content type="html"><![CDATA[<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">5&gt; 画板</span>
</span><span class='line'><span class="cm">    演示程序：</span>
</span><span class='line'><span class="cm">    分析控件：ToolBar(不需要管里面子控件的frame)，画板view,自定义工具条（方便屏幕适配，能迅速固定里面子控件的位置）</span>
</span><span class='line'><span class="cm">    自动布局，四个约束确定一个控件</span>
</span><span class='line'><span class="cm">    蓝色按钮：左，右，下，高固定</span>
</span><span class='line'><span class="cm">    橘色按钮：右，下固定，宽度和高度和蓝色按钮相等。</span>
</span><span class='line'><span class="cm">    绿色按钮：右，下，宽度和高度和橘色按钮相等</span>
</span><span class='line'><span class="cm">    绘图思路：先描述路径，在渲染，需要画很多线条，最好每个线条保存到一个路径里面。</span>
</span><span class='line'><span class="cm">    绘图功能：</span>
</span><span class='line'><span class="cm">        * touchBegin设置画线起点：开始触摸的点</span>
</span><span class='line'><span class="cm">        * 怎么设置起点？创建UIBezierPath，贝塞尔路径才能设置起点</span>
</span><span class='line'><span class="cm">        * touchMove:手指移动到哪就画哪，addLine到移动的点</span>
</span><span class='line'><span class="cm">        * setNeedDisplay,路径描述完了，就渲染到视图就好了。</span>
</span><span class='line'><span class="cm">        * 只能画一条线？drawRect方法每次都会把之前的清掉，重新绘制</span>
</span><span class='line'><span class="cm">        * 怎么绘制多条路径？搞个数组保存上一次的</span>
</span><span class='line'><span class="cm">        * 设置线宽:每次滑动滑块，就改变下一次路径的宽度</span>
</span><span class='line'><span class="cm">        * 监听滑块的值，把值传递给paintView,设置路径的线宽。</span>
</span><span class='line'><span class="cm">        * 不能在drawRect写，会导致所有路径都是一个线宽，应该是每个路径都记录自己的线宽，而且线宽只需要设置一次，在路径一创建的时候就设置。</span>
</span><span class='line'><span class="cm">        * 设置颜色：</span>
</span><span class='line'><span class="cm">        * 自定义UIBezierPath，保存颜色，实现一条路径对应一个颜色</span>
</span><span class='line'><span class="cm">    辅助功能：</span>
</span><span class='line'><span class="cm">    * 清屏：清空所有路径数组</span>
</span><span class='line'><span class="cm">    * 撤销：移除最后一条路径</span>
</span><span class='line'><span class="cm">    * 橡皮擦:设置画笔为白色</span>
</span><span class='line'><span class="cm">    * 保存:</span>
</span><span class='line'><span class="cm">        1&gt; 把画板内容截屏</span>
</span><span class='line'><span class="cm">        2&gt; 把图片保存到相册 UIImageWriteToSavedPhotosAlbum</span>
</span><span class='line'><span class="cm">        3&gt; 保存相册的回调方法不能乱写，必须按照规定 image:didFinishSavingWithError:contextInfo:</span>
</span><span class='line'><span class="cm">    * 照片选择</span>
</span><span class='line'><span class="cm">        1&gt; 通常都是去相册里去照片</span>
</span><span class='line'><span class="cm">        2&gt; UIImagePickerController,就可以去手机相册了</span>
</span><span class='line'><span class="cm">        3&gt; 用Modal，没有导航控制器,不能push</span>
</span><span class='line'><span class="cm">        4&gt; 设置代理，获取图片</span>
</span><span class='line'><span class="cm">        5&gt; 把图片传递给paintView</span>
</span><span class='line'><span class="cm">        6&gt; 添加到路径，然后重绘。:画图片也需要顺序的</span>
</span><span class='line'><span class="cm">    * 照片处理</span>
</span><span class='line'><span class="cm">        1&gt; PPT画思路：搞一个和画板一样的透明view，里面搞个UIImageView来显示我们从照片库选择的图片，然后对UIImageView进行旋转，缩放等操作</span>
</span><span class='line'><span class="cm">        2&gt; UImageView不能放在layoutSubViews里面设置尺寸，因为要设置他的形变，默认会调用他父类的layoutSubViews,导致一些莫名其妙的原因</span>
</span><span class='line'><span class="cm">        3&gt; 在传图片的时候设置他的尺寸，和位置,让他和图片一样的尺寸，显示在中间</span>
</span><span class='line'><span class="cm">        4&gt; 长按操作：在长按结束的时候，做操作</span>
</span><span class='line'><span class="cm">            1.默认高亮状态，先变浅在恢复，设置alpha</span>
</span><span class='line'><span class="cm">            2.动画结束后，把自己截屏，传给控制器里，在交给paintView显示</span>
</span><span class='line'><span class="cm">            3.需要移除父视图，使命完成了，而且不移除，不能绘制东西，永远添加到paintView上面</span>
</span><span class='line'>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>当自定义类设置了接口,从外面传值,一定要重写setter方法</li>
<li>当绘制多条路径path的时候,为了每条路径的颜色不同,可以自定义贝瑟尔路径,继承自UIBezierPath保存每条路径的颜色,增加一个pathColor属性,在drawRect方法中,就可以设置每条路径的颜色,否则修改颜色后所有,颜色都是一样的</li>
<li>stroke时,必须放在最后,属性设置放在之前,比如颜色放在后面,第一根线的颜色是错误的</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-手势解锁]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/17/quartz2d-shou-shi-jie-suo/"/>
    <updated>2014-07-17T11:39:07+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/17/quartz2d-shou-shi-jie-suo</id>
    <content type="html"><![CDATA[<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">4&gt; 手势解锁</span>
</span><span class='line'><span class="cm">    * 演示实例程序</span>
</span><span class='line'><span class="cm">    * 分析界面有几个控件：背景：UIImageView 白色圆圈：按钮（点击他，会出现另外一种图片，按钮可以设置不同状态下的图片。）单独视图：(画线是有范围的，当超出view就不能画线了)</span>
</span><span class='line'><span class="cm">    * HMLoadView:自定义视图，在视图一创建的时候，就添加9个按钮。</span>
</span><span class='line'><span class="cm">    * 在initWithCoder，initWithFrame方法添加按钮。</span>
</span><span class='line'><span class="cm">    * 九宫格布局：</span>
</span><span class='line'><span class="cm">        tolcol = 3</span>
</span><span class='line'><span class="cm">        计算row,col 按钮的x，y跟col,row有关系，col = i % tolcol row = i / tolcol</span>
</span><span class='line'><span class="cm">        计算边距 margin = (view.bounds.size.width - tolcol * btnW) / (tolcol + 1)</span>
</span><span class='line'><span class="cm">        btnX = margin + (btnW + margin) * col</span>
</span><span class='line'><span class="cm">        btnY = (btnW + margin) * row</span>
</span><span class='line'><span class="cm">    * 圆的选中</span>
</span><span class='line'><span class="cm">      * 点击按钮就为选中的图片怎么做？监听按钮点击。</span>
</span><span class='line'><span class="cm">      * 不能addTarget: 不能及时显示选中图片。</span>
</span><span class='line'><span class="cm">      * 监听touchBegin,判断点在不在按钮的frame上。</span>
</span><span class='line'><span class="cm">      * touchBegin不调用？原因：事件交给按钮处理，应该把事件交给解锁视图。让按钮不接收事件。</span>
</span><span class='line'><span class="cm">      * 设置按钮不允许交互，2个用处：1.不接收事件 2.取消高亮效果 一举两得</span>
</span><span class='line'><span class="cm">    * 遍历所有按钮，看触摸点在哪个按钮上，就选中谁，CGRectContainsPoint 传入的参数必须是同一个坐标系</span>
</span><span class='line'><span class="cm">      * 实现touchMove方法：因为手指移动的时候，也需要判断点在不在按钮上。</span>
</span><span class='line'><span class="cm">      * 抽方法，因为touchMove的方法里，也需要做同样的事情。</span>
</span><span class='line'><span class="cm">            1&gt; pointWithTouches 根据touches集合取出触摸点</span>
</span><span class='line'><span class="cm">            2&gt; buttonWithPoint 根据触摸点，获取触摸按钮</span>
</span><span class='line'><span class="cm">   * 圆的连线</span>
</span><span class='line'><span class="cm">     * 哪些需要连线？被选中按钮之间都需要连线，还有一个多余的线</span>
</span><span class='line'><span class="cm">     * 先把选中的按钮全部连线？为什么，因为多余的那根线是从最后一个按钮的圆心开始画，手指移动在哪就画哪。</span>
</span><span class='line'><span class="cm">     * 搞个数组保存下所有选中按钮，在drawRect方法中遍历所有按钮，连线</span>
</span><span class='line'><span class="cm">     * UIBezierPath画线，不需要上下文。</span>
</span><span class='line'><span class="cm">     * 需要多少个UIBezierPath对象？一个，路径都是连续的，不相连的，才需要创建新的UIBezierPath。</span>
</span><span class='line'><span class="cm">     * 遍历数组，描述路径</span>
</span><span class='line'><span class="cm">        1&gt; 起点：第一个按钮的圆心</span>
</span><span class='line'><span class="cm">        2&gt; 添加一根线到其他按钮的圆心</span>
</span><span class='line'><span class="cm">     * 设置路径的颜色和线宽</span>
</span><span class='line'><span class="cm">     * 什么时候渲染？把所有路径都描述完就，渲染一次就够了。</span>
</span><span class='line'><span class="cm">     * [path stroke] 就能渲染到视图上了。</span>
</span><span class='line'><span class="cm">     * 画多余的那根线，记住手指移动的位置。</span>
</span><span class='line'><span class="cm">     * setNeedDisplay 没有画出来线?因为drawRect只会调用一次，需要每次手指移动的时候，都需要重绘。</span>
</span><span class='line'><span class="cm">     * touchBegin不调用setNeedDisplay?那时候重绘也没用，只有起点。</span>
</span><span class='line'><span class="cm">     * lineJoinStyle：有尖尖的东西，线段连接样式的问题，设置为平的。</span>
</span><span class='line'><span class="cm">     * 已经选中的按钮，不需要再次选中，和画线</span>
</span><span class='line'><span class="cm">     * 手指抬起，取消所有选中按钮，并且清空数组，清空线条</span>
</span><span class='line'><span class="cm">     * drawRect判断下没有选中数组，不需要画线。</span>
</span><span class='line'><span class="cm">     * 如何判断用户是否输入正确?给选中按钮绑定tag,遍历所有选中按钮，把tag拼接成一个字符串。</span>
</span><span class='line'>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>自定义View用来添加按钮</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;LockView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">LockView</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">LockView</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 加载完xib的时候调用</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">awakeFromNib</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建9个按钮</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIButton</span> <span class="nl">buttonWithType</span><span class="p">:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 不允许用户交互，按钮就不能点击，也就不能达到高亮状态</span>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">userInteractionEnabled</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">btn</span> <span class="nl">setImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;gesture_node_normal&quot;</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">btn</span> <span class="nl">setImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;gesture_node_highlighted&quot;</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateSelected</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">tag</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">btn</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 为什么要在这个方法布局子控件，因为只要一调用这个方法，就表示父控件的尺寸确定</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">layoutSubviews</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">layoutSubviews</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSUInteger</span> <span class="n">count</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">cols</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">w</span> <span class="o">=</span> <span class="mi">74</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">74</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">margin</span> <span class="o">=</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="n">cols</span> <span class="o">*</span> <span class="n">w</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">cols</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">NSUInteger</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// 获取当前按钮的列数</span>
</span><span class='line'>        <span class="n">col</span> <span class="o">=</span> <span class="n">i</span> <span class="o">%</span> <span class="n">cols</span><span class="p">;</span>
</span><span class='line'>        <span class="n">row</span> <span class="o">=</span> <span class="n">i</span> <span class="o">/</span> <span class="n">cols</span><span class="p">;</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">=</span> <span class="n">margin</span> <span class="o">+</span> <span class="n">col</span> <span class="o">*</span> <span class="p">(</span><span class="n">margin</span> <span class="o">+</span> <span class="n">w</span><span class="p">);</span>
</span><span class='line'>        <span class="n">y</span> <span class="o">=</span> <span class="n">row</span> <span class="o">*</span> <span class="p">(</span><span class="n">margin</span> <span class="o">+</span> <span class="n">w</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81-%E6%B7%BB%E5%8A%A0%E6%8C%89%E9%92%AE.png" alt="" /></p>

<ul>
<li><p>通过控件添加手势
<img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81-%E6%8E%A7%E4%BB%B6%E6%B7%BB%E5%8A%A0%E6%89%8B%E5%8A%BF.png" alt="" /></p></li>
<li><p>手指移动到按钮上使,选中按钮(取消按钮的高亮状态)</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取触摸点</span>
</span><span class='line'>    <span class="n">CGpoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 判断触摸点在不在按钮上</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 点在不在某个范围内</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">CGRectContainsPoint</span><span class="p">(</span><span class="n">btn</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">curP</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 点在按钮上</span>
</span><span class='line'>            <span class="n">btn</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81-%E9%80%89%E4%B8%AD%E6%8C%89%E9%92%AE.png" alt="" /></p>

<ul>
<li>选中按钮之间连线

<ul>
<li>将选中按钮添加到可变数组中保存</li>
<li>每一次有选中的按钮就重绘画线</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMutableArray</span> <span class="o">*</span><span class="n">selectedsBtn</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">selectedsBtn</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_selectedsBtn</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_selectedsBtn</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_selectedsBtn</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取触摸点</span>
</span><span class='line'>    <span class="n">_curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 判断触摸点在不在按钮上</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 点在不在某个范围内,并且按钮没有被选中</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">CGRectContainsPoint</span><span class="p">(</span><span class="n">btn</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">_curP</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">btn</span><span class="p">.</span><span class="n">selected</span> <span class="o">==</span> <span class="nb">NO</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 点在按钮上</span>
</span><span class='line'>            <span class="n">btn</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 保存到数组中</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">btn</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 重绘</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 只要调用这个方法，就会把之前绘制的东西全部清掉，重新绘制</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 没有选中按钮，不需要连线</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 把所有选中按钮中心点连线</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSUInteger</span> <span class="n">count</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 把所有选中按钮之间都连好线</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 设置起点</span>
</span><span class='line'>            <span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">btn</span><span class="p">.</span><span class="n">center</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">btn</span><span class="p">.</span><span class="n">center</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>    <span class="n">path</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="n">path</span><span class="p">.</span><span class="n">lineJoinStyle</span> <span class="o">=</span> <span class="n">kCGLineJoinRound</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>连线到触摸点</li>
<li>当手指抬起时,清空数组重绘,<code>系统默认手势抬起时会重绘</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;LockView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">LockView</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMutableArray</span> <span class="o">*</span><span class="n">selectedsBtn</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">assign</span><span class="p">)</span> <span class="bp">CGPoint</span> <span class="n">curP</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">LockView</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">selectedsBtn</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_selectedsBtn</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_selectedsBtn</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_selectedsBtn</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取触摸点</span>
</span><span class='line'>    <span class="n">_curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 判断触摸点在不在按钮上</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 点在不在某个范围内,并且按钮没有被选中</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">CGRectContainsPoint</span><span class="p">(</span><span class="n">btn</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">_curP</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">btn</span><span class="p">.</span><span class="n">selected</span> <span class="o">==</span> <span class="nb">NO</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 点在按钮上</span>
</span><span class='line'>            <span class="n">btn</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 保存到数组中</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">btn</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 重绘</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateEnded</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 创建可变字符串</span>
</span><span class='line'>        <span class="bp">NSMutableString</span> <span class="o">*</span><span class="n">strM</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableString</span> <span class="n">string</span><span class="p">];</span>
</span><span class='line'>         <span class="c1">// 保存输入密码</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">[</span><span class="n">strM</span> <span class="nl">appendFormat</span><span class="p">:</span><span class="s">@&quot;%ld&quot;</span><span class="p">,</span><span class="n">btn</span><span class="p">.</span><span class="n">tag</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span><span class="n">strM</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 还原界面</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 取消所有按钮的选中</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span> <span class="nl">makeObjectsPerformSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">setSelected</span><span class="p">:)</span> <span class="nl">withObject</span><span class="p">:</span><span class="l">@(</span><span class="nb">NO</span><span class="l">)</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 清除画线,把选中按钮清空</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 加载完xib的时候调用</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">awakeFromNib</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建9个按钮</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIButton</span> <span class="nl">buttonWithType</span><span class="p">:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 不允许用户交互，按钮就不能点击，也就不能达到高亮状态</span>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">userInteractionEnabled</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">btn</span> <span class="nl">setImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;gesture_node_normal&quot;</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">btn</span> <span class="nl">setImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;gesture_node_highlighted&quot;</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateSelected</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">tag</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">btn</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 为什么要在这个方法布局子控件，因为只要一调用这个方法，就表示父控件的尺寸确定</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">layoutSubviews</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">layoutSubviews</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSUInteger</span> <span class="n">count</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">cols</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">w</span> <span class="o">=</span> <span class="mi">74</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">74</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">margin</span> <span class="o">=</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="n">cols</span> <span class="o">*</span> <span class="n">w</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">cols</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">NSUInteger</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">subviews</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// 获取当前按钮的列数</span>
</span><span class='line'>        <span class="n">col</span> <span class="o">=</span> <span class="n">i</span> <span class="o">%</span> <span class="n">cols</span><span class="p">;</span>
</span><span class='line'>        <span class="n">row</span> <span class="o">=</span> <span class="n">i</span> <span class="o">/</span> <span class="n">cols</span><span class="p">;</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">=</span> <span class="n">margin</span> <span class="o">+</span> <span class="n">col</span> <span class="o">*</span> <span class="p">(</span><span class="n">margin</span> <span class="o">+</span> <span class="n">w</span><span class="p">);</span>
</span><span class='line'>        <span class="n">y</span> <span class="o">=</span> <span class="n">row</span> <span class="o">*</span> <span class="p">(</span><span class="n">margin</span> <span class="o">+</span> <span class="n">w</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">btn</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 只要调用这个方法，就会把之前绘制的东西全部清掉，重新绘制</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 没有选中按钮，不需要连线</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 把所有选中按钮中心点连线</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSUInteger</span> <span class="n">count</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 把所有选中按钮之间都连好线</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">selectedsBtn</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 设置起点</span>
</span><span class='line'>            <span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">btn</span><span class="p">.</span><span class="n">center</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">btn</span><span class="p">.</span><span class="n">center</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 连线到手指的触摸点</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">_curP</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>    <span class="n">path</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="n">path</span><span class="p">.</span><span class="n">lineJoinStyle</span> <span class="o">=</span> <span class="n">kCGLineJoinRound</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81-%E8%A7%A3%E9%94%81" alt="" /></p>

<ul>
<li>判断是连线否正确

<ul>
<li>在添加按钮时,添加tag值,在手势抬起状态,判断选中按钮数组里的拼接的tag值和保存的是否相同</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-手动截屏]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/16/quartz2d-shou-dong-jie-ping/"/>
    <updated>2014-07-16T15:39:00+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/16/quartz2d-shou-dong-jie-ping</id>
    <content type="html"><![CDATA[<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%A8%E6%88%AA%E5%B1%8F.png" alt="" />
<img src="http://xiaobenmao.github.io/images/%E6%89%8B%E5%8A%A8%E6%88%AA%E5%B1%8F1.png" alt="" /></p>

<h3>图片截取</h3>

<ul>
<li>1,先用addClip根据path截取所要显示的区域</li>
<li>2,然后将旧的即原来的所要截取的控件渲染到上下文

<ul>
<li>如果是图片和文字直接draw</li>
<li>如果是控件,比如imageView等的层要用renderInContex渲染</li>
</ul>
</li>
<li>3,先有了要截取的区域(1,),再添加控件(2,),然后根据上下文获取一张新的图片</li>
<li>上下文跟原来控件大小相同</li>
<li>上一笔记,图片剪裁(带有边框头像):有了剪裁区域后,直接draw的图片</li>
<li>上一笔记,截屏(指定控件):没有剪裁区域,直接将控件本身层渲染到上下文</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">assign</span><span class="p">)</span> <span class="bp">CGPoint</span> <span class="n">startP</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">imageV</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="bp">UIView</span> <span class="o">*</span><span class="n">clipView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nf">clipView</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_clipView</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_clipView</span> <span class="o">=</span> <span class="n">view</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">view</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'>        <span class="n">view</span><span class="p">.</span><span class="n">alpha</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">_clipView</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 给控制器的view添加一个pan手势</span>
</span><span class='line'>    <span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="n">pan</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIPanGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">pan</span><span class="p">:)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">pan</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">endA</span> <span class="o">=</span> <span class="n">CGPointZero</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateBegan</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 一开始拖动的时候</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 获取一开始触摸点</span>
</span><span class='line'>      <span class="n">_startP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateChanged</span><span class="p">){</span> <span class="c1">// 一直拖动</span>
</span><span class='line'>        <span class="c1">// 获取结束点</span>
</span><span class='line'>         <span class="n">endA</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">w</span> <span class="o">=</span> <span class="n">endA</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">_startP</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">h</span> <span class="o">=</span> <span class="n">endA</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">_startP</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 获取截取范围</span>
</span><span class='line'>        <span class="bp">CGRect</span> <span class="n">clipRect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">_startP</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">_startP</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 生成截屏的view</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">clipView</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">clipRect</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">pan</span><span class="p">.</span><span class="n">state</span> <span class="o">==</span> <span class="n">UIGestureRecognizerStateEnded</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 图片裁剪，生成一张新的图片</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 开启上下文</span>
</span><span class='line'>        <span class="c1">// 如果不透明，默认超出裁剪区域会变成黑色，通常都是透明</span>
</span><span class='line'>        <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">_imageV</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 设置裁剪区域</span>
</span><span class='line'>       <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span>  <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithRect</span><span class="p">:</span><span class="n">_clipView</span><span class="p">.</span><span class="n">frame</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">path</span> <span class="n">addClip</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 获取上下文</span>
</span><span class='line'>        <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 把控件上的内容渲染到上下文</span>
</span><span class='line'>        <span class="p">[</span><span class="n">_imageV</span><span class="p">.</span><span class="n">layer</span> <span class="nl">renderInContext</span><span class="p">:</span><span class="n">ctx</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 生成一张新的图片</span>
</span><span class='line'>        <span class="n">_imageV</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 关闭上下文</span>
</span><span class='line'>        <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 先移除</span>
</span><span class='line'>        <span class="p">[</span><span class="n">_clipView</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// 截取的view设置为nil</span>
</span><span class='line'>        <span class="n">_clipView</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-图片擦除(给妹子脱衣服)]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/16/quartz2d-tu-pian-ca-chu-gei-mei-zi-tuo-yi-fu/"/>
    <updated>2014-07-16T11:38:52+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/16/quartz2d-tu-pian-ca-chu-gei-mei-zi-tuo-yi-fu</id>
    <content type="html"><![CDATA[<ul>
<li>图片擦除是将两张相似的图片重叠,当擦除上面图片的指定区域,显示下面相同区域所要的看到的图片效果</li>
</ul>


<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E7%89%871.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E7%89%872.png" alt="" /></p>

<ul>
<li>核心代码

<ul>
<li>渲染图片:[_imageView.layer renderInContext:ctx];</li>
<li>擦除上层图片:CGContextClearRect(ctx, rect);</li>
</ul>
</li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/%E6%93%A6%E9%99%A4%E5%89%8D.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%93%A6%E9%99%A4%E5%90%8E.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">imageView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加手势</span>
</span><span class='line'>    <span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="n">pan</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIPanGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget</span><span class="p">:</span><span class="nb">self</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">pan</span><span class="p">:)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addGestureRecognizer</span><span class="p">:</span><span class="n">pan</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pan:</span><span class="p">(</span><span class="bp">UIPanGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">pan</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 获取当前点</span>
</span><span class='line'>    <span class="bp">CGPoint</span> <span class="n">curP</span> <span class="o">=</span> <span class="p">[</span><span class="n">pan</span> <span class="nl">locationInView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取擦除的矩形范围</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">wh</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">x</span> <span class="o">=</span> <span class="n">curP</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">wh</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">y</span> <span class="o">=</span> <span class="n">curP</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">wh</span> <span class="o">*</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CGRect</span> <span class="n">rect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">wh</span><span class="p">,</span> <span class="n">wh</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 开启上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 控件的layer渲染上去</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_imageView</span><span class="p">.</span><span class="n">layer</span> <span class="nl">renderInContext</span><span class="p">:</span><span class="n">ctx</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 擦除图片</span>
</span><span class='line'>    <span class="n">CGContextClearRect</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">rect</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 生成一张图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 关闭上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E7%89%87%E6%93%A6%E9%99%A4storyboard.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-截屏(指定控件)]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/15/quartz2d-jie-ping-zhi-ding-kong-jian/"/>
    <updated>2014-07-15T17:38:26+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/15/quartz2d-jie-ping-zhi-ding-kong-jian</id>
    <content type="html"><![CDATA[<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E6%88%AA%E5%8F%96%E5%B1%8F%E5%B9%95.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%88%AA%E5%B1%8F.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E6%88%AA%E5%B1%8F1.png" alt="" />
- 为UIImage增加一个分类,返回截取指定控件的图片</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>   <span class="cm">/*</span>
</span><span class='line'><span class="cm">    *屏幕截图简介:</span>
</span><span class='line'><span class="cm">    *屏幕截图:把屏幕的内容截屏生成一张新的图片</span>
</span><span class='line'><span class="cm">    * 通常开发中，都是把控制器的内容截屏，生成新的图片</span>
</span><span class='line'><span class="cm">    * 控制器怎么显示？根据view</span>
</span><span class='line'><span class="cm">    * view怎么显示? 根据layer图层</span>
</span><span class='line'><span class="cm">    * 把layer渲染到位图上下文</span>
</span><span class='line'><span class="cm">    * 注意：图层只能用渲染，图片和文字可以用draw</span>
</span><span class='line'><span class="cm">    * 渲染在哪?新的图片</span>
</span><span class='line'><span class="cm">    * 开启图片上下文,和视图一样的尺寸</span>
</span><span class='line'><span class="cm">    * 写入桌面</span>
</span><span class='line'><span class="cm">    * 抽分类</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>
</span><span class='line'>    <span class="nl">renderInContext</span><span class="p">:</span><span class="err">把调用者控件的</span><span class="n">layer</span><span class="err">渲染到当前位图上下文</span><span class="n">ctx</span><span class="err">中</span><span class="p">,</span><span class="err">进行操作</span><span class="p">,</span><span class="err">可以获取图片</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="bp">UIImage</span> <span class="nl">(Image)</span>
</span><span class='line'><span class="c1">// 控件截屏</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithCaputureView:</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;UIImage+Image.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="bp">UIImage</span> <span class="nl">(Image)</span>
</span><span class='line'>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithCaputureView:</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 开启位图上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取上下文</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 把控件上的图层渲染到上下文,layer只能渲染</span>
</span><span class='line'>    <span class="p">[</span><span class="n">view</span><span class="p">.</span><span class="n">layer</span> <span class="nl">renderInContext</span><span class="p">:</span><span class="n">ctx</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 生成一张图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 关闭上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使用</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 生成一张新的图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span>  <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageWithCaputureView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// image转data</span>
</span><span class='line'>    <span class="c1">// compressionQuality： 图片质量 1:最高质量</span>
</span><span class='line'>     <span class="bp">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="n">UIImageJPEGRepresentation</span><span class="p">(</span><span class="n">image</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 将截屏保存在指定路径,桌面</span>
</span><span class='line'>    <span class="p">[</span><span class="n">data</span> <span class="nl">writeToFile</span><span class="p">:</span><span class="s">@&quot;/Users/mac/Desktop/view.png&quot;</span> <span class="nl">atomically</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-图片剪裁(带有边框)]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/15/quartz2d-tu-pian-jian-cai-dai-you-bian-kuang/"/>
    <updated>2014-07-15T13:36:47+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/15/quartz2d-tu-pian-jian-cai-dai-you-bian-kuang</id>
    <content type="html"><![CDATA[<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E7%89%87%E5%89%AA%E8%A3%811.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E7%89%87%E5%89%AA%E8%A3%812.png" alt="" /></p>

<ul>
<li>核心代码

<ul>
<li>使用路径剪裁:[path addClip];</li>
<li>使用上下文剪裁:CGContextClip(ctx);</li>
</ul>
</li>
</ul>


<h3>使用路径剪裁</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">*    图片裁剪</span>
</span><span class='line'><span class="cm">    * 分析思路：先设置裁剪区域，把图片画上去，超出裁剪区域的自动裁剪掉。</span>
</span><span class='line'><span class="cm">    * 加载旧图片，根据旧图片，获取上下文尺寸。</span>
</span><span class='line'><span class="cm">    * 上下文的尺寸 = 新图片的尺寸</span>
</span><span class='line'><span class="cm">    * 开启一个多大的上下文?:和图片尺寸一样大，避免压缩图片。如果比图片尺寸小，会压缩图片。</span>
</span><span class='line'><span class="cm">    * 设置裁剪区域：正切于图片的圆</span>
</span><span class='line'><span class="cm">    * 绘制旧图片</span>
</span><span class='line'><span class="cm">    * 获取新图片</span>
</span><span class='line'><span class="cm">    * 关闭上下文</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%89%AA%E8%A3%81%E5%89%8D.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%89%AA%E8%A3%81%E5%90%8E.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">clipImage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 0.加载图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.开启位图上下文，跟图片尺寸一样大</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.设置圆形裁剪区域，正切与图片</span>
</span><span class='line'>    <span class="c1">// 2.1创建圆形的路径</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.2把路径设置为裁剪区域</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">addClip</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.绘制图片</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointZero</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 4.从上下文中获取图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">clipImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 5.关闭上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">clipImage</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>为UIImage添加一个分类,返回一个剪裁后带有指定颜色边框的图片</li>
</ul>


<p><img src="http://xiaobenmao.github.io/images/%E5%89%AA%E8%A3%81%E5%B8%A6%E6%9C%89%E8%BE%B9%E6%A1%86%E5%88%86%E6%9E%90.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">*   带圆环裁剪:在裁剪的图片外边加个小圆环。</span>
</span><span class='line'><span class="cm">    * 分析思路：先画一个大圆，在设置裁剪区域，把图片画上去，超出裁剪区域的自动裁剪掉。</span>
</span><span class='line'><span class="cm">    * 加载旧图片，根据旧图片，获取上下文尺寸。</span>
</span><span class='line'><span class="cm">    * 确定圆环宽度 borderW</span>
</span><span class='line'><span class="cm">    * 上下文的尺寸 = 新图片的尺寸</span>
</span><span class='line'><span class="cm">    * 确定新的上下文尺寸: newImageW : oldImageW + 2 * borderW  newImageH : oldImageH + 2 * borderW，</span>
</span><span class='line'><span class="cm">    * 绘制大圆：</span>
</span><span class='line'><span class="cm">        1.获取上下文 2.添加路径到上下文 3.设置大圆的颜色 = 圆环的颜色 4.渲染</span>
</span><span class='line'><span class="cm">    * 设置裁剪区域,和图片尺寸一样大，只不过，x,y不一样，x=borderW,y=borderW.</span>
</span><span class='line'><span class="cm">    * 绘制旧图片</span>
</span><span class='line'><span class="cm">    * 获取新图片</span>
</span><span class='line'><span class="cm">    * 关闭上下文</span>
</span><span class='line'><span class="cm">    * 抽分类，3个参数，图片名称，圆环宽度，圆环颜色</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%89%AA%E8%A3%81%E5%B8%A6%E6%9C%89%E8%BE%B9%E6%A1%86.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="bp">UIImage</span> <span class="nl">(Image)</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithClipImage:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span> <span class="nf">borderWidth:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">borderWidth</span> <span class="nf">borderColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">color</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;UIImage+Image.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="bp">UIImage</span> <span class="nl">(Image)</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> *  带有外框的图片剪裁</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *  @param image       所要剪裁的图片</span>
</span><span class='line'><span class="cm"> *  @param borderWidth 边框宽度</span>
</span><span class='line'><span class="cm"> *  @param color       边框宽度</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *  @return 剪裁好的图片</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithClipImage:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span> <span class="nf">borderWidth:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">borderWidth</span> <span class="nf">borderColor:</span><span class="p">(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="nv">color</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 图片的宽度和高度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">imageWH</span> <span class="o">=</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置圆环的宽度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">border</span> <span class="o">=</span> <span class="n">borderWidth</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 圆形的宽度和高度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">ovalWH</span> <span class="o">=</span> <span class="n">imageWH</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">border</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.开启上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="n">ovalWH</span><span class="p">,</span> <span class="n">ovalWH</span><span class="p">),</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.画大圆</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">ovalWH</span><span class="p">,</span> <span class="n">ovalWH</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">color</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">fill</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.设置裁剪区域</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">clipPath</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">border</span><span class="p">,</span> <span class="n">border</span><span class="p">,</span> <span class="n">imageWH</span><span class="p">,</span> <span class="n">imageWH</span><span class="p">)];</span>
</span><span class='line'>    <span class="c1">// 把路径设置为剪裁区域</span>
</span><span class='line'>    <span class="p">[</span><span class="n">clipPath</span> <span class="n">addClip</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 4.绘制图片,图片起始点是在上下文的位置</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="n">border</span><span class="p">,</span> <span class="n">border</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 5.获取图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">clipImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 6.关闭上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">clipImage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使用</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 图片裁剪：把正方形图片重新生产一张圆形的图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageWithClipImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">]</span> <span class="nl">borderWidth</span><span class="p">:</span><span class="mi">1</span> <span class="nl">borderColor</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用上下文剪裁</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//画圆，以便以后指定可以显示图片的范围</span>
</span><span class='line'>      <span class="c1">//获取图形上下文</span>
</span><span class='line'>      <span class="n">CGContextRef</span> <span class="n">ctx</span><span class="o">=</span><span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>      <span class="n">CGContextAddEllipseInRect</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//指定上下文中可以显示内容的范围就是圆的范围</span>
</span><span class='line'>      <span class="n">CGContextClip</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>      <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image2</span><span class="o">=</span><span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;me&quot;</span><span class="p">];</span>
</span><span class='line'>      <span class="p">[</span><span class="n">image2</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)];</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%89%AA%E8%A3%81storyboard.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-水印]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/14/quartz2d-shui-yin/"/>
    <updated>2014-07-14T11:56:32+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/14/quartz2d-shui-yin</id>
    <content type="html"><![CDATA[<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E6%B0%B4%E5%8D%B00.png" alt="" />
- 水印需要绘制图片到新的图片上，因此需要用到位图上下文</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>   <span class="cm">/*</span>
</span><span class='line'><span class="cm">1&gt; 水印简介</span>
</span><span class='line'><span class="cm">    *  图片水印作用：防止他人盗取图片，加一些Logo，生成一张新的图片。</span>
</span><span class='line'><span class="cm">    *  怎么生成新的图片?和绘图一样的，需要拿到上下文做事情，这里也需要拿到上下文，生成一个新的图片。</span>
</span><span class='line'><span class="cm">    *  什么上下文？位图上下文，在这个上下文画东西，就能输出到新的图片上。</span>
</span><span class='line'><span class="cm">    *  怎么获取？之前用的都是图层上下文，系统会自动创建，但是我们位图上下文，需要我们手动创建</span>
</span><span class='line'><span class="cm">    *  总结：只要不和view有关系的上下文，都需要我们手动创建。</span>
</span><span class='line'><span class="cm">    *  在哪获取图像上下文，viewDidLoad, 不需要拿到系统创建的图层上下文，没必要在drawRect方法里写,直接viewDidLoad就行了。</span>
</span><span class='line'><span class="cm">    *  怎么创建图像上下文了？之前说过跟上下文有关的以什么开头，UIGraphics</span>
</span><span class='line'><span class="cm">    *  UIGraphicsBeginImageContextWithOptions:看注释,create bitmap，创建一个位图上下文,而且这种方法得到的图片最清晰。</span>
</span><span class='line'><span class="cm">    *  解释参数（size:新图片尺寸 opaque: YES:不透明 NO:透明 scale:0.0 不伸缩）</span>
</span><span class='line'><span class="cm">    *  绘制内容(图片，文字)</span>
</span><span class='line'><span class="cm">    *  获取图片：把位图上下文的内容生成一个图片给你。</span>
</span><span class='line'><span class="cm">    *  关闭上下文，不关闭一直占用着内存。</span>
</span><span class='line'><span class="cm">    *  显示UIImageView上</span>
</span><span class='line'><span class="cm">    *  保存图片，写到文件，UIImage不能写，需要转换成NSData二进制数据</span>
</span><span class='line'><span class="cm">    *  UIImageJPEGRepresentation:可以设置图片质量</span>
</span><span class='line'><span class="cm">    *  UIImagePNGRepresentation：把图片转换成png格式的二进制数据,png格式默认是最高清的。</span>
</span><span class='line'><span class="cm">    *  写到桌面</span>
</span><span class='line'><span class="cm">    */</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%B0%B4%E5%8D%B01.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 加载图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;小黄人&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     1,获取上下文，之前的上下文都是在view的drawRect方法中获取（跟View相关联的上下文layer上下文）</span>
</span><span class='line'><span class="cm">     2,目前我们需要绘制图片到新的图片上，因此需要用到位图上下文</span>
</span><span class='line'><span class="cm">     3,怎么获取位图上下文,注意位图上下文的获取方式跟layer上下文不一样。位图上下文需要我们手动创建。</span>
</span><span class='line'><span class="cm">     4,开启一个位图上下文，注意位图上下文跟view无关联，所以不需要在drawRect.</span>
</span><span class='line'><span class="cm">     5,开启一个位图上下文:UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)</span>
</span><span class='line'><span class="cm">     参数:</span>
</span><span class='line'><span class="cm">        1&gt;size:位图上下文的尺寸（新图片的尺寸）</span>
</span><span class='line'><span class="cm">        2&gt;opaque: 不透明度 YES：不透明 NO:透明，通常我们需要透明的上下文</span>
</span><span class='line'><span class="cm">        3&gt;scale:通常不需要缩放上下文，取值为0，表示不缩放</span>
</span><span class='line'>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextSetRGBFillColor</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 1.绘制原生的图片</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointZero</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.给原生的图片添加文字</span>
</span><span class='line'>    <span class="bp">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="s">@&quot;MYCSDN&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建字典属性</span>
</span><span class='line'>    <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">dict</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>    <span class="n">dict</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'>    <span class="n">dict</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">20</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">str</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">528</span><span class="p">)</span> <span class="nl">withAttributes</span><span class="p">:</span><span class="n">dict</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.生成一张图片给我们,从上下文中获取图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">imageWater</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">imageWater</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E6%B0%B4%E5%8D%B01.png" alt="" />
- 也可以在位图上下文里通过渲染上下文或者路径来画图形</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 加载图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;小黄人&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     1,获取上下文，之前的上下文都是在view的drawRect方法中获取（跟View相关联的上下文layer上下文）</span>
</span><span class='line'><span class="cm">     2,目前我们需要绘制图片到新的图片上，因此需要用到位图上下文</span>
</span><span class='line'><span class="cm">     3,怎么获取位图上下文,注意位图上下文的获取方式跟layer上下文不一样。位图上下文需要我们手动创建。</span>
</span><span class='line'><span class="cm">     4,开启一个位图上下文，注意位图上下文跟view无关联，所以不需要在drawRect.</span>
</span><span class='line'><span class="cm">     5,开启一个位图上下文:UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)</span>
</span><span class='line'><span class="cm">     参数:</span>
</span><span class='line'><span class="cm">        1&gt;size:位图上下文的尺寸（新图片的尺寸）</span>
</span><span class='line'><span class="cm">        2&gt;opaque: 不透明度 YES：不透明 NO:透明，通常我们需要透明的上下文</span>
</span><span class='line'><span class="cm">        3&gt;scale:通常不需要缩放上下文，取值为0，表示不缩放</span>
</span><span class='line'>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.获取上下文(位图上下文)</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.描述路径</span>
</span><span class='line'>    <span class="n">CGContextMoveToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextAddLineToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span><span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.生成一张图片给我们,从上下文中获取图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">imageWater</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">myImageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">imageWater</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-矩阵操作]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/13/quartz2d-ju-zhen-cao-zuo/"/>
    <updated>2014-07-13T08:36:24+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/13/quartz2d-ju-zhen-cao-zuo</id>
    <content type="html"><![CDATA[<p><img src="http://xiaobenmao.github.io/images/%E7%9F%A9%E9%98%B5%E6%93%8D%E4%BD%9C.png" alt="" /></p>

<ul>
<li><p>view之所以能够显示视图，是因为它的上面有layer,将来图形也是渲染到layer上面</p></li>
<li><p>形变操作是对该layer的操作,从以下举例图形的旋转可以看出,旋转的时候本身中心点也改变</p></li>
<li><p>添加顺序</p>

<ul>
<li>形变操作必须要在添加路径之前</li>
<li>形变操作必须在使用上下文添加图形之前</li>
</ul>
</li>
</ul>


<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.获取上下文</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.描述路径</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span> <span class="o">-</span><span class="mi">50</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">100</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path1</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">40</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 上下文矩阵操作</span>
</span><span class='line'>    <span class="c1">// 注意:矩阵操作必须要在添加路径之前,或者在使用上下文添加图形之前</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 平移,缩放,旋转的</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//  平移</span>
</span><span class='line'>    <span class="c1">// 参数:上下文,x方向平移量,y方向平移量</span>
</span><span class='line'>    <span class="n">CGContextTranslateCTM</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 缩放</span>
</span><span class='line'>    <span class="c1">// 参数:上下文,x方向缩放量,y方向缩放量</span>
</span><span class='line'>    <span class="n">CGContextScaleCTM</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 旋转</span>
</span><span class='line'>    <span class="c1">// 参数:上下文,旋转度数</span>
</span><span class='line'>    <span class="n">CGContextRotateCTM</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">M_PI_4</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.把路径添加上下文</span>
</span><span class='line'>    <span class="n">CGContextAddPath</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextAddPath</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">path1</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 必须放在形变之后</span>
</span><span class='line'>    <span class="n">CGContextAddRect</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">150</span><span class="p">,</span> <span class="mi">150</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">80</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 4.渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextFillPath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%BD%A2%E5%8F%98%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%BD%A2%E5%8F%98%E5%B9%B3%E7%A7%BB.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%BD%A2%E5%8F%98%E7%BC%A9%E6%94%BE.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E5%BD%A2%E5%8F%98%E6%97%8B%E8%BD%AC.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-图形上下文栈]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/12/quartz2d-tu-xing-shang-xia-wen-zhan/"/>
    <updated>2014-07-12T20:32:55+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/12/quartz2d-tu-xing-shang-xia-wen-zhan</id>
    <content type="html"><![CDATA[<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E5%BD%A2%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88.png" alt="" /></p>

<!--more-->


<ul>
<li><p>UIBezierPath的路径和上下文的路径是不同的,特别是在设置状态的时候,有时候不会起作用,可以使用'.CGPath'将UIkit的路径转换成CoreGraphics路径</p>

<ul>
<li>如果以后用贝瑟尔绘制图形[path stroke],应设置贝瑟尔路径状态</li>
<li>如果渲染上下文CGContextStrokePath(ctx),上下文的状态要用上下文设置,上下文只有一条路径,或者将贝塞尔路径转换成上下文路径</li>
</ul>
</li>
<li><p>如果通过上下文设置状态(宽度,颜色等),那么只有一条路径</p>

<ul>
<li>如果向获得不同的状态可以通过前后设置不同的状态实现</li>
<li>也可以通过上下文栈实现</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;DrawView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">DrawView</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 如果以后用贝瑟尔绘制图形【path stroke】,上下文的状态由贝瑟尔路径状态</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.获取上下文</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.描述路径</span>
</span><span class='line'>    <span class="c1">// 第一根</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">125</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">240</span><span class="p">,</span> <span class="mi">125</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 把路径添加到上下文</span>
</span><span class='line'>    <span class="c1">// .CGPath 可以UIkit的路径转换成CoreGraphics路径</span>
</span><span class='line'>    <span class="n">CGContextAddPath</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 保存一份上下文的状态</span>
</span><span class='line'>    <span class="n">CGContextSaveGState</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置上下文状态</span>
</span><span class='line'>    <span class="n">CGContextSetLineWidth</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第二根</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.描述路径</span>
</span><span class='line'>    <span class="c1">// 第一根</span>
</span><span class='line'>    <span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">125</span><span class="p">,</span> <span class="mi">10</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="nl">addLineToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">125</span><span class="p">,</span> <span class="mi">240</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 把路径添加到上下文</span>
</span><span class='line'>    <span class="c1">// .CGPath 可以UIkit的路径转换成CoreGraphics路径</span>
</span><span class='line'>    <span class="n">CGContextAddPath</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 还原状态</span>
</span><span class='line'>    <span class="n">CGContextRestoreGState</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//    // 设置不同的上下文状态</span>
</span><span class='line'><span class="c1">//    CGContextSetLineWidth(ctx, 1);</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//    [[UIColor blackColor] set];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E5%9B%BE%E5%BD%A2%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88%E4%B8%89%E6%9D%A1%E7%BA%BF.png" alt="" />
- 画三条线描述上下文栈
    - 先保存一份初始上下文状态,CGContextSaveGState
    - 设置第一条线的上下文状态进行设置,并保存在上下文栈
    - 设置第二条线的上下文状态进行设置,并保存在上下文栈
    - 设置第三条线(不设置上下文状态),如果不恢复上下文,则将上下文栈中栈顶即第二条线上下文状态取出进行设置</p>

<pre><code>- 如果恢复上下文状态CGContextRestoreGState,则第三条线的上下文状态最初始的默认的上下文状态
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 1.获取上下文</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextMoveToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">125</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextAddLineToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mi">125</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 保存一份上下文的状态</span>
</span><span class='line'>    <span class="n">CGContextSaveGState</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第一条线的状态加入上下文栈</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置上下文状态</span>
</span><span class='line'>    <span class="n">CGContextSetLineWidth</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第二根线</span>
</span><span class='line'>    <span class="n">CGContextMoveToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">90</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextAddLineToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mi">185</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第二条线的状态加入上下文栈</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置上下文状态</span>
</span><span class='line'>    <span class="n">CGContextSetLineWidth</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">blueColor</span><span class="p">]</span> <span class="n">set</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第三根</span>
</span><span class='line'>    <span class="n">CGContextMoveToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">125</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextAddLineToPoint</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">125</span><span class="p">,</span> <span class="mi">240</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 还原状态 ,则为最原始的默认上下文状态</span>
</span><span class='line'>    <span class="c1">//CGContextRestoreGState(ctx);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//不还原状态,则取出图形上下文栈中即第二条的状态进行设置</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 渲染上下文</span>
</span><span class='line'>    <span class="n">CGContextStrokePath</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-绘制图片和模仿UIImageView]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/11/quartz2d-hui-zhi-tu-pian-he-mo-fang-uiimageview/"/>
    <updated>2014-07-11T17:31:01+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/11/quartz2d-hui-zhi-tu-pian-he-mo-fang-uiimageview</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 超出裁剪区域的内容全部裁剪掉</span>
</span><span class='line'>    <span class="c1">// 注意：裁剪必须放在绘制之前</span>
</span><span class='line'>    <span class="n">UIRectClip</span><span class="p">(</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 默认绘制的内容尺寸跟图片尺寸一样大</span>
</span><span class='line'>    <span class="c1">//[image drawAtPoint:CGPointZero];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 在矩形区域内拉伸</span>
</span><span class='line'>    <span class="c1">//[image drawInRect:rect];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 将图片原比例平铺</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawAsPatternInRect</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<ul>
<li><p>画图片drawAtPoint
<img src="http://xiaobenmao.github.io/images/%E7%94%BB%E5%9B%BE%E7%89%87drawAtPoint.png" alt="" /></p></li>
<li><p>画图片drawInRect
<img src="http://xiaobenmao.github.io/images/%E7%94%BB%E5%9B%BE%E7%89%87drawInRect.png" alt="" /></p></li>
<li><p>画图片平铺
<img src="http://xiaobenmao.github.io/images/%E7%94%BB%E5%9B%BE%E7%89%87%E5%B9%B3%E9%93%BA.png" alt="" /></p></li>
<li><p>系统UIimageView设置图片</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 默认图片把控件填充，图片的尺寸跟控件尺寸一样大</span>
</span><span class='line'>    <span class="c1">//UIImageView *imageV = [[UIImageView alloc] initWithFrame:CGRectMake(50, 50, 200, 350)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 默认imagView的尺寸和image的尺寸一样大</span>
</span><span class='line'>    <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">imageV</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//imageV.image = [UIImage imageNamed:@&quot;阿狸头像&quot;];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">imageV</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>模仿UIimageView,绘制图片</p></li>
<li><ul>
<li>initWithFrame:
<img src="http://xiaobenmao.github.io/images/%E6%A8%A1%E4%BB%BFImageView1.png" alt="" /></li>
</ul>
</li>
<li><p>initWithImage:
<img src="http://xiaobenmao.github.io/images/%E7%94%BB%E5%9B%BE%E7%89%87drawInRect.png" alt="" /></p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyUIimageView</span> : <span class="bp">UIView</span>
</span><span class='line'><span class="cm">/** 图片属性*/</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithImage:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nv">image</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithFrame:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span> <span class="nv">rect</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;MyUIimageView.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyUIimageView</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithFrame:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 设置控件的尺寸</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">rect</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">rect</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithImage:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span>
</span><span class='line'><span class="p">{</span>   <span class="c1">// 默认控件大小等于图片尺寸</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setImage:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 设置新图片后重新绘制</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 图片填充整个控件</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">image</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">rect</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//MyUIimageView *imageV = [[MyUIimageView alloc]initWithImage:[UIImage imageNamed:@&quot;阿狸头像&quot;]];</span>
</span><span class='line'>    <span class="c1">//imageV.image = [UIImage imageNamed:@&quot;001&quot;];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">MyUIimageView</span> <span class="o">*</span><span class="n">imageV</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyUIimageView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">300</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">imageV</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;阿狸头像&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">imageV</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz2d-绘制文字]]></title>
    <link href="http://xiaobenmao.github.io/blog/2014/07/10/quartz2d-hui-zhi-wen-zi/"/>
    <updated>2014-07-10T12:30:33+08:00</updated>
    <id>http://xiaobenmao.github.io/blog/2014/07/10/quartz2d-hui-zhi-wen-zi</id>
    <content type="html"><![CDATA[<p><img src="http://xiaobenmao.github.io/images/%E7%94%BB%E6%96%87%E5%AD%97.png" alt="" /></p>

<!--more-->


<p><img src="http://xiaobenmao.github.io/images/%E7%94%BB%E6%96%87%E5%AD%971.png" alt="" /></p>

<p><img src="http://xiaobenmao.github.io/images/%E7%94%BB%E6%96%87%E5%AD%972.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 绘制文字</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="s">@&quot;带我一起飞一起飞一起飞一起飞一起飞一起飞一起飞一起飞&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 只设置起点,不会换行</span>
</span><span class='line'><span class="c1">//[str drawAtPoint:self.bounds.origin withAttributes:textDict];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">str</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span> <span class="nl">withAttributes</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiaobenmao.github.io/images/%E7%94%BB%E5%AF%8C%E6%96%87%E6%9C%AC%E6%96%87%E5%AD%97.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">drawRect:</span><span class="p">(</span><span class="bp">CGRect</span><span class="p">)</span><span class="nv">rect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 绘制文字</span>
</span><span class='line'>    <span class="bp">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="s">@&quot;带我一起飞一起飞一起飞一起飞一起飞一起飞一起飞一起飞&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 富文本属性</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Attritbutes:富文本属性,用来设置字体的一些属性</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">textDict</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置文字的颜色</span>
</span><span class='line'>    <span class="n">textDict</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置文字字体</span>
</span><span class='line'>    <span class="n">textDict</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">30</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置文字的宽度,只有设置了宽度,文字才会有空心颜色的效果</span>
</span><span class='line'>    <span class="n">textDict</span><span class="p">[</span><span class="n">NSStrokeWidthAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="mi">@3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置文字的空心颜色,该颜色会覆盖字体的颜色</span>
</span><span class='line'>    <span class="n">textDict</span><span class="p">[</span><span class="n">NSStrokeColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blueColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 创建阴影对象</span>
</span><span class='line'>    <span class="bp">NSShadow</span> <span class="o">*</span><span class="n">shadow</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSShadow</span> <span class="n">alloc</span><span class="p">]</span><span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 设置阴影的颜色</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 设置阴影的偏移量</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowOffset</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 设置阴影的模糊度</span>
</span><span class='line'>    <span class="n">shadow</span><span class="p">.</span><span class="n">shadowBlurRadius</span> <span class="o">=</span> <span class="mf">1.5</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 将阴影对象加入富文本中</span>
</span><span class='line'>    <span class="n">textDict</span><span class="p">[</span><span class="n">NSShadowAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="n">shadow</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 在矩形框内画出文字(自动换行),并添加富文本</span>
</span><span class='line'>    <span class="p">[</span><span class="n">str</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span> <span class="nl">withAttributes</span><span class="p">:</span><span class="n">textDict</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>UILabel控件有个attributedText属性,也可以设置富文本属性</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 创建富文本字符串</span>
</span><span class='line'><span class="bp">NSAttributedString</span> <span class="o">*</span><span class="n">strArr</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSAttributedString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString</span><span class="p">:</span><span class="s">@&quot;asdlsajkldl&quot;</span> <span class="nl">attributes</span><span class="p">:</span><span class="n">textDict</span><span class="p">];</span>
</span><span class='line'><span class="c1">//给label设置富文本字符串</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">labelView</span><span class="p">.</span><span class="n">attributedText</span> <span class="o">=</span>  <span class="n">strArr</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>NSAttributedString描述</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> 字符属性</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 字符属性可以应用于 attributed string 的文本中。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSFontAttributeName;(字体)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSParagraphStyleAttributeName;(段落)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSForegroundColorAttributeName;(字体颜色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSBackgroundColorAttributeName;(字体背景色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSLigatureAttributeName;(连字符)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSKernAttributeName;(字间距)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSStrikethroughStyleAttributeName;(删除线)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSUnderlineStyleAttributeName;(下划线)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSStrokeColorAttributeName;(边线颜色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSStrokeWidthAttributeName;(边线宽度)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSShadowAttributeName;(阴影)(横竖排版)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> NSString *const NSVerticalGlyphFormAttributeName;</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 常量</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 1&gt; NSFontAttributeName(字体)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 UIFont 对象。该属性用于改变一段文本的字体。如果不指定该属性，则默认为12-point Helvetica(Neue)。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 2&gt; NSParagraphStyleAttributeName(段落)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSParagraphStyle 对象。该属性在一段文本上应用多个属性。如果不指定该属性，则默认为 NSParagraphStyle 的defaultParagraphStyle 方法返回的默认段落属性。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 3&gt; NSForegroundColorAttributeName(字体颜色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 UIColor 对象。该属性用于指定一段文本的字体颜色。如果不指定该属性，则默认为黑色。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 4&gt; NSBackgroundColorAttributeName(字体背景色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 UIColor 对象。该属性用于指定一段文本的背景颜色。如果不指定该属性，则默认无背景色。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 5&gt; NSLigatureAttributeName(连字符)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(整数)。连体字符是指某些连在一起的字符，它们采用单个的图元符号。0 表示没有连体字符。1 表示使用默认的连体字符。2表示使用所有连体符号。默认值为 1（注意，iOS 不支持值为 2）。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 6&gt; NSKernAttributeName(字间距)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(整数)。字母紧排指定了用于调整字距的像素点数。字母紧排的效果依赖于字体。值为 0 表示不使用字母紧排。默认值为0。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 7&gt; NSStrikethroughStyleAttributeName(删除线)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(整数)。该值指定是否在文字上加上删除线，该值参考“Underline Style Attributes”。默认值是NSUnderlineStyleNone。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 8&gt; NSUnderlineStyleAttributeName(下划线)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(整数)。该值指定是否在文字上加上下划线，该值参考“Underline Style Attributes”。默认值是NSUnderlineStyleNone。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 9&gt; NSStrokeColorAttributeName(边线颜色)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 UIColor 对象。如果该属性不指定（默认），则等同于 NSForegroundColorAttributeName。否则，指定为删除线或下划线颜色。更多细节见“Drawing attributedstrings that are both filled and stroked”。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 10&gt; NSStrokeWidthAttributeName(边线宽度)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(小数)。该值改变描边宽度（相对于字体size 的百分比）。默认为 0，即不改变。正数只改变描边宽度。负数同时改变文字的描边和填充宽度。例如，对于常见的空心字，这个值通常为3.0。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 11&gt; NSShadowAttributeName(阴影)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSShadow 对象。默认为 nil。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 12&gt; NSVerticalGlyphFormAttributeName(横竖排版)</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> 该属性所对应的值是一个 NSNumber 对象(整数)。0 表示横排文本。1 表示竖排文本。在 iOS 中，总是使用横排文本，0 以外的值都未定义。</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> */</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
